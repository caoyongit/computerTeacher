<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018年终总结</title>
    <url>/50205.html</url>
    <content><![CDATA[<h3 id="年度工作概述"><a href="#年度工作概述" class="headerlink" title="年度工作概述"></a>年度工作概述</h3><p>一年的时间，每当自己在总结它的时候，感觉是那么的短暂—弹指一挥间.而也就是在这一挥间，承载着太多太多，有收获与成就，有失败与不足.回头看看2017年的足迹，伴随着自己一年的是学习与坚持。</p>
<span id="more"></span>
<p>2017年是贝壳网划分产品线的第一年，很荣幸加入了贝壳网的主打产品线资源线。工作承接2016年的内容，继续维护和开发内网平台接口（主要数字内容生产管理系统调用），因为有外社版本的加入，今年的难点主要是在各接口性能的提升上。再加上原有教学大师和影视课堂资源比较陈旧，急需要更新换代新的资源，侧重点就落在了优课大师版本的开发方面。外网方面为了吸引老师的优质资源，提高贝壳网优质资源的数量，着重开发的版本落在了群建共享上，还参与了资源库和洋葱数学二个小版本的迭代，外网优课大师的优化工作。</p>
<p>为了优化各接口的性能，加强了对mysql数据库索引的学习，学会使用了JProfiler java性能分析工具，SoapUI Pro工具的压测功能，业务逻辑方面理解更加透彻。为了解耦各个线的代码，在以沈亮为带头人的前提下，我们将以产品线为单位，把项目进行了拆分，并用maven进行版本控制管理，统一的将spring版本升级到了4.2.9，还进行了IntelliJ IDEA工具的培训使用。</p>
<p>总之，随着贝壳网用户越来越多，资源越来越丰富，对接口的性能要求会越来越高，2018年要学的东西会越来越多，问题和任务会越来越重。路漫漫其修远兮，吾将上下而求索。</p>
<h3 id="2017年总结"><a href="#2017年总结" class="headerlink" title="2017年总结"></a>2017年总结</h3><h4 id="全年重点工作完成情况"><a href="#全年重点工作完成情况" class="headerlink" title="全年重点工作完成情况"></a>全年重点工作完成情况</h4><h5 id="重点工作一：数字内容生产管理系统"><a href="#重点工作一：数字内容生产管理系统" class="headerlink" title="重点工作一：数字内容生产管理系统"></a>重点工作一：数字内容生产管理系统</h5><p>背景和起因：数字内容生产管理系统自贝壳网成立以来一直担负着数字内容的生产、审核和发布，是资源建设的基础。</p>
<p>起始时间：2017年1月——2017年10月</p>
<p>投入成本：4人天</p>
<p>完成情况：已迭代至2.3.6版本</p>
<p>取得的效益：除了常规的优化更新迭代，还对资源包进行了扩展，有优课资源包、专题资源包、课例资源包、二维码资源包，新增二维码管理功能，共享资源管理，共享教案管理，工作量统计功能，6月份还上了分社版本。现在供二十几个编辑部老师和实习生使用，主要负责数字资源的生产。</p>


<h5 id="重点工作一：群建共享"><a href="#重点工作一：群建共享" class="headerlink" title="重点工作一：群建共享"></a>重点工作一：群建共享</h5><p>背景和起因：为了吸引老师分享自己优质的原创资源</p>
<p>起始时间：2017年3月——2017年4月</p>
<p>投入成本：7人天</p>
<p>完成情况：100%，等待后续优化或版本迭代</p>
<p>取得的效益：老师们开始分享自己的优质资源，共享交易额和下载量有明显提高。</p>


<p>内网老师们可以对资源和教案进行审核和采集。</p>




<h5 id="重点工作三：优课大师"><a href="#重点工作三：优课大师" class="headerlink" title="重点工作三：优课大师"></a>重点工作三：优课大师</h5><p>背景和起因：原有教学大师和影视课堂资源陈旧，不能随时更新，有问题不能随时更改 </p>
<p>起始时间：2017年3月——2017年10月</p>
<p>投入成本：4人天</p>
<p>完成情况：100%，等待后续新增学科</p>
<p>取得的效益：到目前为止共有小学、初中、高中49个优课模板 ，生产优课资源包4903个，月UV\PV平均在八千和一万左右。</p>




<h4 id="全年日常工作完成情况"><a href="#全年日常工作完成情况" class="headerlink" title="全年日常工作完成情况"></a>全年日常工作完成情况</h4><h5 id="研发工作方面"><a href="#研发工作方面" class="headerlink" title="研发工作方面"></a>研发工作方面</h5><h6 id="研发工作概述"><a href="#研发工作概述" class="headerlink" title="研发工作概述"></a>研发工作概述</h6><p>研发方面主要负责数字内容生产系统的接口开发，由于业务教熟练，每次迭代都会满足千行代码少于5个</p>
<p>bug的要求，但在外网接口的开发，千行代码的bug率会在6-8个左右。因为每次的代码提交都有review，</p>
<p>每天都会有代码提交，加上有新的代码规范机制，相较去年有大幅改进。2.2.1.2.	迭代情况</p>
<h5 id="迭代情况"><a href="#迭代情况" class="headerlink" title="迭代情况"></a>迭代情况</h5><p><strong>数字内容生产管理系统</strong></p>
<table>
<thead>
<tr>
<th><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>V2.2.9</td>
<td>2017.1.18-2017.2.15</td>
<td>主要是对试题试卷部分进行修改，新增使用场景，优化新增接口，优化工作流发布、检校审核，联调新的WCF服务接口</td>
</tr>
<tr>
<td>V2.2.10</td>
<td>2017.2.17-2017.2.27</td>
<td>资源新增是否隐藏功能，试题列表新增修改时间查询</td>
</tr>
<tr>
<td>V2..3.0</td>
<td>2017.2.28-2017.3.15</td>
<td>主要是对出版物进行扩展，新增ISSN、总刊期、期刊刊期、二级分类，资源列表中新增是否关联资源类型查询，重刷所有试卷word文件，题库列表支持多批次ID查询</td>
</tr>
<tr>
<td>V2.3.1</td>
<td>2017.3.16-2017.3.31</td>
<td>内网优课大师模块的开发</td>
</tr>
<tr>
<td>V2.3.3</td>
<td>2017.5.2-2017.5.17</td>
<td>主要是修复bug为主</td>
</tr>
<tr>
<td>V2.3.3sp01</td>
<td>2017.5.26-2017.6.14</td>
<td>这个版本是对优课的优化，修改存储优课的数据结构，修改所涉及到的优课的各接口，重刷所有PPT样式</td>
</tr>
<tr>
<td>V2.3.4</td>
<td>2017.6.14-2017.8.16</td>
<td>优化个接口的性能，查询速度响应在1s内，分社版本需求和数据报表统计功能</td>
</tr>
<tr>
<td>V2.3.5</td>
<td>2017.8.16-2017.9.20</td>
<td>课例资源包相关接口开发</td>
</tr>
<tr>
<td>V2.3.6</td>
<td>2017.10.16-2017.10.23</td>
<td>新增视频打点功能、新增主讲人、优化资源包打开速度</td>
</tr>
</tbody></table>
<p><strong>群建共享</strong></p>
<table>
<thead>
<tr>
<th align="left"><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">V1.0</td>
<td>2017.3.31-2017.4.28</td>
<td>群建共享功能模块开发，优化推送接口，优化收藏接口，扫码三次查看资源需登陆贝壳网用户体验不好问题，根据知识点ID查询知识图谱，</td>
</tr>
<tr>
<td align="left">V1.1</td>
<td>2017.5.12-2017.5.25</td>
<td>教学设计的共享</td>
</tr>
</tbody></table>
<p><strong>洋葱数学</strong></p>
<table>
<thead>
<tr>
<th><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>V2.0</td>
<td>2017.8.3-2017.9.14</td>
<td>我购买的金牌提分产品，购买金牌提分产品</td>
</tr>
</tbody></table>
<p><strong>优课大师</strong></p>
<table>
<thead>
<tr>
<th><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>V2.0</td>
<td>2017.9.21-2017.9.26</td>
<td>新增购买优课包，查询优课课程数，新增推荐资源</td>
</tr>
<tr>
<td>V2.0.2</td>
<td>2017.10.24-2017.10.26</td>
<td>新增小学书法学科</td>
</tr>
<tr>
<td>V2.1</td>
<td>2017.11.14-2017.11.27</td>
<td>修改购买接口，新增小学、初中美术和音乐学科</td>
</tr>
</tbody></table>
<p><strong>资源库</strong></p>
<table>
<thead>
<tr>
<th><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>V2.6.1</td>
<td>2017.10.26-2017.11.14</td>
<td>优化接口、销售单新增优课大师和虚拟实验室授权功能</td>
</tr>
</tbody></table>
<p><strong>资源线报表统计功能</strong></p>
<table>
<thead>
<tr>
<th><strong>迭代版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>功能描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>V1.0</td>
<td>2017.11.28-2017.1月左右</td>
<td>完成产品访客分析统计功能</td>
</tr>
</tbody></table>
<h5 id="研发成果"><a href="#研发成果" class="headerlink" title="研发成果"></a>研发成果</h5><p>主要是对数字内容生产管理系统的维护和开发，从2.2.9版本升级到了2.3.6；对各接口的性能优化，提高了自己对数据库索引的认识且还在学习更高层次的数据库知识；全程参与了优课大师的需求评审、技术讨论、数据库设计，数据的生产和展示模块的开发；群建共享中数据如何进行内外网通信、状态管理，用新开数据统计表的思路去解决报表统计功能；有数据库设计文档和常量维护文档。</p>
<h5 id="问题与求助"><a href="#问题与求助" class="headerlink" title="问题与求助"></a>问题与求助</h5><ol>
<li><p>接口性能优化，请教测试如何使用性能压测工具，平台组其他同事共商解决之道，网上搜索检测测性能的工具；</p>
</li>
<li><p>优课大师开发过程中因为不了解前端的展示情况，导致后来又重新改了一版，在以后设计生产系统的功能模块之前会先对前端的展示情况做了解；</p>
</li>
<li><p>希望产品人员再对需求进行讲解的时候多给开发普及一些概念性的东西，比如为什么要做这个需求，用在哪里，实际作用是什么，而不是开发理解的仅仅在增删改查的方面；</p>
</li>
</ol>
<h5 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h5><p>常年负责备课资源文件预览和视频转码功能的维护</p>
<h4 id="个人成长与提高"><a href="#个人成长与提高" class="headerlink" title="个人成长与提高"></a>个人成长与提高</h4><p>使用JProfiler java 性能工具和soapUI Pro工具的压测功能解决了接口的性能问题。</p>
<h3 id="2018年计划"><a href="#2018年计划" class="headerlink" title="2018年计划"></a>2018年计划</h3><h4 id="2018年年度目标预设"><a href="#2018年年度目标预设" class="headerlink" title="2018年年度目标预设"></a>2018年年度目标预设</h4><ol>
<li>   完成各产品功能模块的开发和维护；</li>
<li>   熟读两本书籍《深入理解Java虚拟机》和《高性能MySQL》;</li>
<li>   为了阅读技术文档，每天英语词汇量累计是不能少的；</li>
</ol>
<h4 id="个人发展规划或其他补充"><a href="#个人发展规划或其他补充" class="headerlink" title="个人发展规划或其他补充"></a>个人发展规划或其他补充</h4><p>做程序员已经7、8年有余，除了负责日常的维护系统的功能模块和开发外，课外也自学了不少东西。来贝壳网的第一感觉就是这里的每个人都很牛，自己很普通，来年希望主攻一块贝壳网的弱项，为贝壳网的发展尽绵薄之力。也希望偶遇良人，为自己更上一层楼提供指引。</p>
]]></content>
      <categories>
        <category>原创</category>
      </categories>
      <tags>
        <tag>年总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Astra Linux 一款基于Linux的俄罗斯计算机操作系统(OS)</title>
    <url>/55683.html</url>
    <content><![CDATA[<p>Astra Linux 是一款基于Linux的俄罗斯计算机操作系统(OS)，正在俄罗斯联邦广泛部署，以取代 Microsoft Windows。因为微软曾经在俄罗斯被禁止出售，当然现已解封。</p>
<p>Astra Linux 是公认的 Debian 衍生产品。Rusbitech 与 Linux 基金会有合作关系。它曾是文档基金会顾问委员会的一部分，但由于俄罗斯入侵乌克兰，该委员会于 2022 年 2 月 26 日被暂停。</p>
<p>该操作系统有两个版本：主要版本称为“特别版”，另一个称为“普通版”。两者的主要区别在于前者需要付费，而后者免费；前者适用于 x86-64 架构、ARM 架构和 Elbrus 架构，而后者仅适用于 x86-64 架构；前者具有安全认证，提供 3 个级别的操作系统安全性（以俄罗斯城市命名，从低到高为：<em>Oryol</em>、<em>Voronezh</em>和<em>Smolensk</em>），而后者没有安全认证，仅提供最低级别的操作系统安全性（<em>Oryol</em>）。</p>
<p>今天博主纯属是为了好玩，也是好奇这个系统到底长什么样，所有我决定在虚拟机上进行安装测试下。如果你也想玩玩试试，可以跟着尝试下。</p>
<p><img src="https://c5a6b8d.webp.li/2025/04/astra.png"></p>
<p>1、Astra Linux 系统镜像下载：</p>
<p>时光机下载：【**<a href="https://archive.org/details/1.7.0-11.06.2021-12.40/Astra%20Linux%20Features/page/n7/mode/2up">点击前往</a>**】</p>
<p>Astra Linux 官方：【**<a href="https://dl.astralinux.ru/astra/stable/2.12_x86-64/iso/">点击前往</a>**】</p>
<p>2、VMware 虚拟机下载：【<a href="https://www.dnjs.xyz/53303.html"><strong>点击前往</strong></a>】</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>全新 Windows 11 任务栏和开始菜单的外观！超级美观大方</title>
    <url>/47992.html</url>
    <content><![CDATA[<p>想不想彻底改变 Windows 11 默认的任务栏和开始菜单的外观！跟着我来操作，可以让你的电脑屏幕焕然一新，超级美观又大方！</p>
<p><img src="https://c5a6b8d.webp.li/2025/01/Windhawk.png"></p>
<p>首先我们需要下载 <strong>Windhawk 神器，</strong>这是一款<strong>免费且开源</strong>的Windows11系统自定义工具，它采用模块化设计，旨在简化Windows系统定制的过程，并提供更多的个性化设置选项！</p>
<p><strong>Windhawk 官方下载：【<a href="https://windhawk.net/">点击前往</a>】</strong></p>
<p><strong>电脑桌面背景图下载：【<a href="https://bbs.freedidi.com/t/topic/1525">点击前往</a>】</strong></p>
<p><strong>任务栏透明效果：</strong>在系统设置中心 – 辅助功能 – 视觉效果 – 开启透明效果即可！</p>
<p><strong>代码获取</strong></p>
<p>1、开始菜单风格：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;&quot;controlStyles<span class="selector-attr">[0]</span><span class="selector-class">.target</span>&quot;:<span class="string">&quot;Button#CloseAllAppsButton&quot;</span>,<span class="string">&quot;controlStyles[0].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=14&quot;</span>,<span class="string">&quot;controlStyles[0].styles[1]&quot;</span>:<span class="string">&quot;Margin=0,0,-32,0&quot;</span>,<span class="string">&quot;controlStyles[0].styles[2]&quot;</span>:<span class="string">&quot;Width=74&quot;</span>,<span class="string">&quot;controlStyles[0].styles[3]&quot;</span>:<span class="string">&quot;Height=26&quot;</span>,<span class="string">&quot;controlStyles[1].target&quot;</span>:<span class="string">&quot;Grid#ShowMoreSuggestions&quot;</span>,<span class="string">&quot;controlStyles[1].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[2].target&quot;</span>:<span class="string">&quot;Grid#SuggestionsParentContainer&quot;</span>,<span class="string">&quot;controlStyles[2].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[3].target&quot;</span>:<span class="string">&quot;Grid#TopLevelSuggestionsListHeader&quot;</span>,<span class="string">&quot;controlStyles[3].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[4].target&quot;</span>:<span class="string">&quot;Button#ShowAllAppsButton&quot;</span>,<span class="string">&quot;controlStyles[4].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=14&quot;</span>,<span class="string">&quot;controlStyles[4].styles[1]&quot;</span>:<span class="string">&quot;Margin=0,0,32,0&quot;</span>,<span class="string">&quot;controlStyles[4].styles[2]&quot;</span>:<span class="string">&quot;Width=148&quot;</span>,<span class="string">&quot;controlStyles[4].styles[3]&quot;</span>:<span class="string">&quot;Height=26&quot;</span>,<span class="string">&quot;controlStyles[5].target&quot;</span>:<span class="string">&quot;StartDocked.SearchBoxToggleButton&quot;</span>,<span class="string">&quot;controlStyles[5].styles[0]&quot;</span>:<span class="string">&quot;Margin=30,0,31,28&quot;</span>,<span class="string">&quot;controlStyles[6].target&quot;</span>:<span class="string">&quot;PipsPager#PinnedListPipsPager&quot;</span>,<span class="string">&quot;controlStyles[6].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[7].target&quot;</span>:<span class="string">&quot;Border#AcrylicBorder&quot;</span>,<span class="string">&quot;controlStyles[7].styles[0]&quot;</span>:<span class="string">&quot;Background:=&lt;AcrylicBrush TintColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot; TintOpacity=\&quot;0\&quot; TintLuminosityOpacity=\&quot;.45\&quot; Opacity=\&quot;1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[7].styles[1]&quot;</span>:<span class="string">&quot;CornerRadius=62&quot;</span>,<span class="string">&quot;controlStyles[7].styles[2]&quot;</span>:<span class="string">&quot;BorderBrush:=&lt;AcrylicBrush TintColor=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; TintOpacity=\&quot;0\&quot; TintLuminosityOpacity=\&quot;.25\&quot; Opacity=\&quot;1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[7].styles[3]&quot;</span>:<span class="string">&quot;BorderThickness=1&quot;</span>,<span class="string">&quot;controlStyles[8].target&quot;</span>:<span class="string">&quot;Grid#MainContent&quot;</span>,<span class="string">&quot;controlStyles[8].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=12&quot;</span>,<span class="string">&quot;controlStyles[9].target&quot;</span>:<span class="string">&quot;StartMenu.PinnedList&quot;</span>,<span class="string">&quot;controlStyles[9].styles[0]&quot;</span>:<span class="string">&quot;Height=690&quot;</span>,<span class="string">&quot;controlStyles[10].target&quot;</span>:<span class="string">&quot;TextBlock#DisplayName&quot;</span>,<span class="string">&quot;controlStyles[10].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,19,0,-16&quot;</span>,<span class="string">&quot;controlStyles[10].styles[1]&quot;</span>:<span class="string">&quot;FontSize=13&quot;</span>,<span class="string">&quot;controlStyles[10].styles[2]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[10].styles[3]&quot;</span>:<span class="string">&quot;Opacity=.98&quot;</span>,<span class="string">&quot;controlStyles[11].target&quot;</span>:<span class="string">&quot;TextBlock#PinnedListHeaderText&quot;</span>,<span class="string">&quot;controlStyles[11].styles[0]&quot;</span>:<span class="string">&quot;Margin=-29,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[11].styles[1]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[11].styles[2]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[11].styles[3]&quot;</span>:<span class="string">&quot;FontSize=16&quot;</span>,<span class="string">&quot;controlStyles[12].target&quot;</span>:<span class="string">&quot;Border#TaskbarSearchBackground&quot;</span>,<span class="string">&quot;controlStyles[12].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[13].target&quot;</span>:<span class="string">&quot;Border#AppBorder&quot;</span>,<span class="string">&quot;controlStyles[13].styles[0]&quot;</span>:<span class="string">&quot;Background:=&lt;AcrylicBrush TintColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot;  FallbackColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot; TintOpacity=\&quot;0\&quot; TintLuminosityOpacity=\&quot;.85\&quot; Opacity=\&quot;1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[13].styles[1]&quot;</span>:<span class="string">&quot;BorderBrush:=&lt;AcrylicBrush TintColor=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; TintOpacity=\&quot;0\&quot; TintLuminosityOpacity=\&quot;.25\&quot; Opacity=\&quot;1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[13].styles[2]&quot;</span>:<span class="string">&quot;CornerRadius=12&quot;</span>,<span class="string">&quot;controlStyles[14].target&quot;</span>:<span class="string">&quot;Border#dropshadow&quot;</span>,<span class="string">&quot;controlStyles[14].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=12&quot;</span>,<span class="string">&quot;controlStyles[15].target&quot;</span>:<span class="string">&quot;Cortana.UI.Views.RichSearchBoxControl#SearchBoxControl&quot;</span>,<span class="string">&quot;controlStyles[15].styles[0]&quot;</span>:<span class="string">&quot;Margin=33,33,33,10&quot;</span>,<span class="string">&quot;controlStyles[16].target&quot;</span>:<span class="string">&quot;TextBlock#UserTileNameText&quot;</span>,<span class="string">&quot;controlStyles[16].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[17].target&quot;</span>:<span class="string">&quot;TextBlock#AllAppsHeading&quot;</span>,<span class="string">&quot;controlStyles[17].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[17].styles[1]&quot;</span>:<span class="string">&quot;Margin=-32,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[17].styles[2]&quot;</span>:<span class="string">&quot;FontSize=16&quot;</span>,<span class="string">&quot;controlStyles[17].styles[3]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[18].target&quot;</span>:<span class="string">&quot;Border#ContentBorder&quot;</span>,<span class="string">&quot;controlStyles[18].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=6&quot;</span>,<span class="string">&quot;controlStyles[19].target&quot;</span>:<span class="string">&quot;GridViewItem &gt; Border#ContentBorder &gt; Grid#DroppedFlickerWorkaroundWrapper &gt; Border#BackgroundBorder&quot;</span>,<span class="string">&quot;controlStyles[19].styles[0]&quot;</span>:<span class="string">&quot;FocusVisualPrimaryThickness=0&quot;</span>,<span class="string">&quot;controlStyles[20].target&quot;</span>:<span class="string">&quot;StartDocked.SearchBoxToggleButton &gt; Grid &gt; ContentPresenter &gt; TextBlock#PlaceholderText&quot;</span>,<span class="string">&quot;controlStyles[20].styles[0]&quot;</span>:<span class="string">&quot;Text=Where to next?&quot;</span>,<span class="string">&quot;controlStyles[20].styles[1]&quot;</span>:<span class="string">&quot;FontWeight=700&quot;</span>,<span class="string">&quot;controlStyles[20].styles[2]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[20].styles[3]&quot;</span>:<span class="string">&quot;FontSize=24&quot;</span>,<span class="string">&quot;controlStyles[20].styles[4]&quot;</span>:<span class="string">&quot;Foreground:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; Opacity=\&quot;.85\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[20].styles[5]&quot;</span>:<span class="string">&quot;Margin=10,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[21].target&quot;</span>:<span class="string">&quot;StartDocked.SearchBoxToggleButton &gt; Grid &gt; Border&quot;</span>,<span class="string">&quot;controlStyles[21].styles[0]&quot;</span>:<span class="string">&quot;Background=transparent&quot;</span>,<span class="string">&quot;controlStyles[21].styles[1]&quot;</span>:<span class="string">&quot;BorderBrush=transparent&quot;</span>,<span class="string">&quot;controlStyles[22].target&quot;</span>:<span class="string">&quot;StartDocked.SearchBoxToggleButton &gt; Grid &gt; FontIcon&quot;</span>,<span class="string">&quot;controlStyles[22].styles[0]&quot;</span>:<span class="string">&quot;Transform3D:=&lt;CompositeTransform3D  TranslateX=\&quot;165\&quot; TranslateY=\&quot;-1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[22].styles[1]&quot;</span>:<span class="string">&quot;Foreground:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; Opacity=\&quot;.85\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[22].styles[2]&quot;</span>:<span class="string">&quot;FontSize=24&quot;</span>,<span class="string">&quot;controlStyles[23].target&quot;</span>:<span class="string">&quot;Grid#TopLevelRoot&quot;</span>,<span class="string">&quot;controlStyles[23].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,-8,0,0&quot;</span>,<span class="string">&quot;controlStyles[24].target&quot;</span>:<span class="string">&quot;GridViewItem&quot;</span>,<span class="string">&quot;controlStyles[24].styles[0]&quot;</span>:<span class="string">&quot;Height=96&quot;</span>,<span class="string">&quot;controlStyles[24].styles[1]&quot;</span>:<span class="string">&quot;Margin=0,0,0,2&quot;</span>,<span class="string">&quot;controlStyles[25].target&quot;</span>:<span class="string">&quot;StartDocked.UserTileView&quot;</span>,<span class="string">&quot;controlStyles[25].styles[0]&quot;</span>:<span class="string">&quot;Margin=512,-1290,-2000,0&quot;</span>,<span class="string">&quot;controlStyles[26].target&quot;</span>:<span class="string">&quot;StartDocked.UserTileView &gt; StartDocked.NavigationPaneButton &gt; Grid &gt; Border&quot;</span>,<span class="string">&quot;controlStyles[26].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=99&quot;</span>,<span class="string">&quot;controlStyles[26].styles[1]&quot;</span>:<span class="string">&quot;Margin=8,0,8,0&quot;</span>,<span class="string">&quot;controlStyles[27].styles[0]&quot;</span>:<span class="string">&quot;Margin=-64,-1290,-2000,0&quot;</span>,<span class="string">&quot;controlStyles[27].target&quot;</span>:<span class="string">&quot;StartDocked.PowerOptionsView&quot;</span>,<span class="string">&quot;controlStyles[27].styles[1]&quot;</span>:<span class="string">&quot;CornerRadius=99&quot;</span>,<span class="string">&quot;controlStyles[27].styles[2]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[28].target&quot;</span>:<span class="string">&quot;TextBlock#ShowAllAppsButtonText&quot;</span>,<span class="string">&quot;controlStyles[28].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[28].styles[1]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[29].target&quot;</span>:<span class="string">&quot;Button#CloseAllAppsButton &gt; ContentPresenter &gt; StackPanel &gt; TextBlock&quot;</span>,<span class="string">&quot;controlStyles[29].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[29].styles[1]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[30].target&quot;</span>:<span class="string">&quot;Border#AcrylicOverlay&quot;</span>,<span class="string">&quot;controlStyles[30].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[31].target&quot;</span>:<span class="string">&quot;Grid#AllAppsPaneHeader&quot;</span>,<span class="string">&quot;controlStyles[31].styles[0]&quot;</span>:<span class="string">&quot;Margin=64,-8,64,0&quot;</span>,<span class="string">&quot;controlStyles[32].target&quot;</span>:<span class="string">&quot;Grid#InnerContent&quot;</span>,<span class="string">&quot;controlStyles[32].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,31,0,-64&quot;</span>,<span class="string">&quot;controlStyles[33].target&quot;</span>:<span class="string">&quot;TextBlock#AppDisplayName&quot;</span>,<span class="string">&quot;controlStyles[33].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[33].styles[1]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[33].styles[2]&quot;</span>:<span class="string">&quot;Margin=4,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[34].target&quot;</span>:<span class="string">&quot;Button#Header &gt; Border &gt; TextBlock&quot;</span>,<span class="string">&quot;controlStyles[34].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[34].styles[1]&quot;</span>:<span class="string">&quot;FontWeight=600&quot;</span>,<span class="string">&quot;controlStyles[34].styles[2]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[35].target&quot;</span>:<span class="string">&quot;StartDocked.PowerOptionsView &gt; StartDocked.NavigationPaneButton &gt; Grid &gt; Border&quot;</span>,<span class="string">&quot;controlStyles[35].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=99&quot;</span>,<span class="string">&quot;controlStyles[35].styles[1]&quot;</span>:<span class="string">&quot;Margin=1&quot;</span>,<span class="string">&quot;controlStyles[36].target&quot;</span>:<span class="string">&quot;TileGrid&quot;</span>,<span class="string">&quot;controlStyles[36].styles[0]&quot;</span>:<span class="string">&quot;Background:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource ControlFillColorInputActive&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource ControlFillColorInputActive&#125;\&quot; Opacity=\&quot;.7\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[36].styles[1]&quot;</span>:<span class="string">&quot;CornerRadiusProtected=8&quot;</span>,<span class="string">&quot;controlStyles[36].styles[2]&quot;</span>:<span class="string">&quot;BorderThicknessProtected=1&quot;</span>,<span class="string">&quot;controlStyles[36].styles[3]&quot;</span>:<span class="string">&quot;BorderBrushProtected:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; Opacity=\&quot;.35\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[37].target&quot;</span>:<span class="string">&quot;ListViewItem&quot;</span>,<span class="string">&quot;controlStyles[37].styles[0]&quot;</span>:<span class="string">&quot;Margin=1,0,-6,0&quot;</span>,<span class="string">&quot;controlStyles[37].styles[1]&quot;</span>:<span class="string">&quot;CornerRadius=4&quot;</span>,<span class="string">&quot;controlStyles[38].target&quot;</span>:<span class="string">&quot;Button#Header&quot;</span>,<span class="string">&quot;controlStyles[38].styles[0]&quot;</span>:<span class="string">&quot;Margin=4,0,-3,0&quot;</span>,<span class="string">&quot;controlStyles[39].target&quot;</span>:<span class="string">&quot;StartDocked.AllAppsPane#AllAppsPanel&quot;</span>,<span class="string">&quot;controlStyles[39].styles[0]&quot;</span>:<span class="string">&quot;Margin=-20,0,-6,0&quot;</span>,<span class="string">&quot;controlStyles[40].target&quot;</span>:<span class="string">&quot;TextBlock#PlaceholderTextContentPresenter&quot;</span>,<span class="string">&quot;controlStyles[40].styles[0]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[40].styles[1]&quot;</span>:<span class="string">&quot;FontSize=24&quot;</span>,<span class="string">&quot;controlStyles[40].styles[2]&quot;</span>:<span class="string">&quot;FontWeight=700&quot;</span>,<span class="string">&quot;controlStyles[40].styles[3]&quot;</span>:<span class="string">&quot;Foreground:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; Opacity=\&quot;.7\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[41].target&quot;</span>:<span class="string">&quot;Microsoft.UI.Xaml.Controls.AnimatedIcon#SearchIconPlayer&quot;</span>,<span class="string">&quot;controlStyles[41].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[42].target&quot;</span>:<span class="string">&quot;Button#SearchGlyphContainer&quot;</span>,<span class="string">&quot;controlStyles[42].styles[0]&quot;</span>:<span class="string">&quot;FontSize=32&quot;</span>,<span class="string">&quot;controlStyles[42].styles[1]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[43].target&quot;</span>:<span class="string">&quot;Cortana.UI.Views.CortanaRichSearchBox#SearchTextBox&quot;</span>,<span class="string">&quot;controlStyles[43].styles[0]&quot;</span>:<span class="string">&quot;FontSize=24&quot;</span>,<span class="string">&quot;controlStyles[43].styles[1]&quot;</span>:<span class="string">&quot;Foreground:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource TextFillColorPrimary&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource TextFillColorPrimary&#125;\&quot; Opacity=\&quot;.85\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[43].styles[2]&quot;</span>:<span class="string">&quot;FontFamily=Aptos&quot;</span>,<span class="string">&quot;controlStyles[43].styles[3]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[43].styles[4]&quot;</span>:<span class="string">&quot;FontWeight=ExtraBold&quot;</span>,<span class="string">&quot;controlStyles[44].target&quot;</span>:<span class="string">&quot;Border#LayerBorder&quot;</span>,<span class="string">&quot;controlStyles[44].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[45].target&quot;</span>:<span class="string">&quot;Windows.UI.Xaml.Controls.FontIcon#SearchBoxOnTaskbarSearchGlyph&quot;</span>,<span class="string">&quot;controlStyles[45].styles[0]&quot;</span>:<span class="string">&quot;Visibility=0&quot;</span>,<span class="string">&quot;controlStyles[45].styles[1]&quot;</span>:<span class="string">&quot;Margin=0&quot;</span>,<span class="string">&quot;controlStyles[45].styles[2]&quot;</span>:<span class="string">&quot;FontSize=32&quot;</span>,<span class="string">&quot;controlStyles[45].styles[3]&quot;</span>:<span class="string">&quot;Opacity=.85&quot;</span>,<span class="string">&quot;controlStyles[46].target&quot;</span>:<span class="string">&quot;Cortana.UI.Views.RichSearchBoxControl#SearchBoxControl&quot;</span>,<span class="string">&quot;controlStyles[46].styles[0]&quot;</span>:<span class="string">&quot;Margin=25,32,25,13&quot;</span>,<span class="string">&quot;controlStyles[47].target&quot;</span>:<span class="string">&quot;Grid#WebViewGrid &gt; WebView&quot;</span>,<span class="string">&quot;controlStyles[47].styles[0]&quot;</span>:<span class="string">&quot;Margin=-3,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[48].target&quot;</span>:<span class="string">&quot;TextBlock#StatusMessage&quot;</span>,<span class="string">&quot;controlStyles[48].styles[0]&quot;</span>:<span class="string">&quot;Visibility=1&quot;</span>,<span class="string">&quot;controlStyles[49].target&quot;</span>:<span class="string">&quot;Border#LogoBackgroundPlate&quot;</span>,<span class="string">&quot;controlStyles[49].styles[0]&quot;</span>:<span class="string">&quot;Margin=12,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[50].target&quot;</span>:<span class="string">&quot;Grid#WebViewGrid&quot;</span>,<span class="string">&quot;controlStyles[50].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=0,0,12,0&quot;</span>,<span class="string">&quot;controlStyles[51].target&quot;</span>:<span class="string">&quot;Border#DropShadow&quot;</span>,<span class="string">&quot;controlStyles[51].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=62&quot;</span>,<span class="string">&quot;controlStyles[52].target&quot;</span>:<span class="string">&quot;Border#DropShadowDismissTarget&quot;</span>,<span class="string">&quot;controlStyles[52].styles[0]&quot;</span>:<span class="string">&quot;CornerRadius=12&quot;</span>,<span class="string">&quot;controlStyles[53].target&quot;</span>:<span class="string">&quot;Windows.UI.Xaml.Controls.FlyoutPresenter[1]&quot;</span>,<span class="string">&quot;controlStyles[53].styles[0]&quot;</span>:<span class="string">&quot;Margin=-250,50,0,0&quot;</span>,<span class="string">&quot;controlStyles[54].target&quot;</span>:<span class="string">&quot;StartDocked.LauncherFrame &gt; Grid#RootGrid &gt; Grid#RootContent &gt; Grid#MainContent &gt; Grid#InnerContent &gt; Rectangle&quot;</span>,<span class="string">&quot;controlStyles[54].styles[0]&quot;</span>:<span class="string">&quot;Visibility=Collapsed&quot;</span>,<span class="string">&quot;controlStyles[55].target&quot;</span>:<span class="string">&quot;Windows.UI.Xaml.Controls.FlyoutPresenter&quot;</span>,<span class="string">&quot;controlStyles[55].styles[0]&quot;</span>:<span class="string">&quot;Margin=-250,0,0,0&quot;</span>,<span class="string">&quot;controlStyles[56].target&quot;</span>:<span class="string">&quot;StartDocked.SearchBoxToggleButton &gt; Grid &gt; FontIcon#SearchGlyph&quot;</span>,<span class="string">&quot;controlStyles[56].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,-3,0,0&quot;</span>,<span class="string">&quot;controlStyles[56].styles[1]&quot;</span>:<span class="string">&quot;FontSize=25&quot;</span>,<span class="string">&quot;controlStyles[56].styles[2]&quot;</span>:<span class="string">&quot;Foreground:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource FocusStrokeColorOuter&#125;\&quot; Opacity=\&quot;.85\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[57].target&quot;</span>:<span class="string">&quot;StartMenu.ExpandedFolderList &gt; Grid#Root &gt; Border&quot;</span>,<span class="string">&quot;controlStyles[57].styles[0]&quot;</span>:<span class="string">&quot;Height=420&quot;</span>,<span class="string">&quot;controlStyles[58].target&quot;</span>:<span class="string">&quot;TextBox#ExpandedFolderNameTextBox&quot;</span>,<span class="string">&quot;controlStyles[58].styles[0]&quot;</span>:<span class="string">&quot;Margin=-15,-15,15,20&quot;</span>,<span class="string">&quot;controlStyles[59].target&quot;</span>:<span class="string">&quot;Windows.UI.Xaml.Controls.GridView#FolderList &gt; Border&quot;</span>,<span class="string">&quot;controlStyles[59].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,0,0,-60&quot;</span>&#125;</span><br></pre></td></tr></table></figure>



<p>2、任务栏风格：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;&quot;controlStyles<span class="selector-attr">[0]</span><span class="selector-class">.target</span>&quot;:<span class="string">&quot;Taskbar.TaskbarFrame#TaskbarFrame&quot;</span>,<span class="string">&quot;controlStyles[0].styles[1]&quot;</span>:<span class="string">&quot;HorizontalAlignment=Center&quot;</span>,<span class="string">&quot;controlStyles[0].styles[2]&quot;</span>:<span class="string">&quot;Width=Auto&quot;</span>,<span class="string">&quot;controlStyles[1].target&quot;</span>:<span class="string">&quot;Taskbar.TaskbarFrame#TaskbarFrame &gt; Grid#RootGrid&quot;</span>,<span class="string">&quot;controlStyles[1].styles[0]&quot;</span>:<span class="string">&quot;Padding=6,0,6,0&quot;</span>,<span class="string">&quot;controlStyles[1].styles[1]&quot;</span>:<span class="string">&quot;Margin=0,2,0,3&quot;</span>,<span class="string">&quot;controlStyles[1].styles[2]&quot;</span>:<span class="string">&quot;BorderThickness=1&quot;</span>,<span class="string">&quot;controlStyles[1].styles[3]&quot;</span>:<span class="string">&quot;BorderBrush:=&lt;SolidColorBrush Color=\&quot;&#123;ThemeResource SurfaceStrokeColorDefault&#125;\&quot; Opacity=\&quot;0.5\&quot; /&gt;&quot;</span>,<span class="string">&quot;controlStyles[2].target&quot;</span>:<span class="string">&quot;Rectangle#BackgroundFill&quot;</span>,<span class="string">&quot;controlStyles[2].styles[0]&quot;</span>:<span class="string">&quot;Visibility=Collapsed&quot;</span>,<span class="string">&quot;controlStyles[3].target&quot;</span>:<span class="string">&quot;Rectangle#BackgroundStroke&quot;</span>,<span class="string">&quot;controlStyles[3].styles[0]&quot;</span>:<span class="string">&quot;Visibility=Collapsed&quot;</span>,<span class="string">&quot;controlStyles[4].target&quot;</span>:<span class="string">&quot;Taskbar.AugmentedEntryPointButton#AugmentedEntryPointButton &gt; Taskbar.TaskListButtonPanel#ExperienceToggleButtonRootPanel&quot;</span>,<span class="string">&quot;controlStyles[4].styles[0]&quot;</span>:<span class="string">&quot;Margin=0&quot;</span>,<span class="string">&quot;controlStyles[5].target&quot;</span>:<span class="string">&quot;Grid#SystemTrayFrameGrid&quot;</span>,<span class="string">&quot;controlStyles[5].styles[0]&quot;</span>:<span class="string">&quot;Background:=#00000000&quot;</span>,<span class="string">&quot;controlStyles[5].styles[1]&quot;</span>:<span class="string">&quot;CornerRadius=10&quot;</span>,<span class="string">&quot;controlStyles[5].styles[2]&quot;</span>:<span class="string">&quot;BackgroundSizing=InnerBorderEdge&quot;</span>,<span class="string">&quot;controlStyles[5].styles[3]&quot;</span>:<span class="string">&quot;Margin=0,2,0,3&quot;</span>,<span class="string">&quot;controlStyles[5].styles[4]&quot;</span>:<span class="string">&quot;BorderThickness=5&quot;</span>,<span class="string">&quot;controlStyles[6].target&quot;</span>:<span class="string">&quot;SystemTray.ChevronIconView&quot;</span>,<span class="string">&quot;controlStyles[6].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[7].target&quot;</span>:<span class="string">&quot;SystemTray.NotifyIconView#NotifyItemIcon&quot;</span>,<span class="string">&quot;controlStyles[7].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[8].target&quot;</span>:<span class="string">&quot;SystemTray.OmniButton&quot;</span>,<span class="string">&quot;controlStyles[8].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[9].target&quot;</span>:<span class="string">&quot;SystemTray.CopilotIcon&quot;</span>,<span class="string">&quot;controlStyles[9].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[10].target&quot;</span>:<span class="string">&quot;SystemTray.OmniButton#NotificationCenterButton &gt; Grid &gt; ContentPresenter &gt; ItemsPresenter &gt; StackPanel &gt; ContentPresenter &gt; systemtray:IconView#SystemTrayIcon &gt; Grid&quot;</span>,<span class="string">&quot;controlStyles[10].styles[0]&quot;</span>:<span class="string">&quot;Padding=4,0,4,0&quot;</span>,<span class="string">&quot;controlStyles[11].target&quot;</span>:<span class="string">&quot;SystemTray.IconView#SystemTrayIcon &gt; Grid#ContainerGrid &gt; ContentPresenter#ContentPresenter &gt; Grid#ContentGrid &gt; SystemTray.TextIconContent &gt; Grid#ContainerGrid&quot;</span>,<span class="string">&quot;controlStyles[11].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[12].target&quot;</span>:<span class="string">&quot;SystemTray.StackListView#IconStack &gt; ItemsPresenter &gt; StackPanel &gt; ContentPresenter &gt; SystemTray.IconView#SystemTrayIcon&quot;</span>,<span class="string">&quot;controlStyles[12].styles[0]&quot;</span>:<span class="string">&quot;Padding=0&quot;</span>,<span class="string">&quot;controlStyles[13].target&quot;</span>:<span class="string">&quot;SystemTray.Stack#ShowDesktopStack&quot;</span>,<span class="string">&quot;controlStyles[13].styles[0]&quot;</span>:<span class="string">&quot;Margin=0,-4,-12,-4&quot;</span>,<span class="string">&quot;controlStyles[14].target&quot;</span>:<span class="string">&quot;Taskbar.Gripper#GripperControl&quot;</span>,<span class="string">&quot;controlStyles[14].styles[0]&quot;</span>:<span class="string">&quot;Width=Auto&quot;</span>,<span class="string">&quot;controlStyles[14].styles[1]&quot;</span>:<span class="string">&quot;MinWidth=24&quot;</span>,<span class="string">&quot;controlStyles[15].target&quot;</span>:<span class="string">&quot;SystemTray.SystemTrayFrame&quot;</span>,<span class="string">&quot;controlStyles[15].styles[0]&quot;</span>:<span class="string">&quot;HorizontalAlignment=1&quot;</span>,<span class="string">&quot;controlStyles[1].styles[4]&quot;</span>:<span class="string">&quot;CornerRadius=20&quot;</span>,<span class="string">&quot;controlStyles[1].styles[5]&quot;</span>:<span class="string">&quot;Background:=&lt;AcrylicBrush TintColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot; FallbackColor=\&quot;&#123;ThemeResource CardStrokeColorDefaultSolid&#125;\&quot; TintOpacity=\&quot;0\&quot; TintLuminosityOpacity=\&quot;.65\&quot; Opacity=\&quot;1\&quot;/&gt;&quot;</span>,<span class="string">&quot;controlStyles[0].styles[0]&quot;</span>:<span class="string">&quot;MaxWidth=1050&quot;</span>,<span class="string">&quot;controlStyles[0].styles[3]&quot;</span>:<span class="string">&quot;MinWidth=1050&quot;</span>,<span class="string">&quot;controlStyles[15].styles[1]&quot;</span>:<span class="string">&quot;Margin=800,0,0,0&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>如果你无法在线复制代码，可以直接点击这里<a href="https://pan.tuio.cc/s/b5OTl">【下载代码】</a>文件，也是可以的。</p>
<p><strong>壁纸和离线安装包下载：</strong></p>
<p>百度网盘： <a href="https://pan.baidu.com/s/1_hqWKYz7jRcJfCMG2hYRag?pwd=9xba">https://pan.baidu.com/s/1_hqWKYz7jRcJfCMG2hYRag?pwd=9xba</a> 提取码: 9xba</p>
<p>夸克网盘：<a href="https://pan.quark.cn/s/ad5b44eb53f6">https://pan.quark.cn/s/ad5b44eb53f6</a></p>
<p><img src="https://c5a6b8d.webp.li/2025/01/2bde4e9df720250119140600-scaled.jpg"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Windhawk</tag>
      </tags>
  </entry>
  <entry>
    <title>桌面美化软件来了！Rainmeter让你的Windows桌面更酷炫、更效率</title>
    <url>/31810.html</url>
    <content><![CDATA[<p>桌面美化软件来了！Rainmeter让你的Windows桌面更酷炫、更效率！自定义小组件，显示天气、CPU使用率、内存占用等信息，既好看又实用。超多皮肤模板任你挑选，让桌面瞬间焕然一新！快来试试吧！</p>
<p>视频地址： <a href="https://www.xiaohongshu.com/explore/67779fb4000000000b016405?app_platform=android&app_version=8.67.0&apptime=1735892920&share_from_user_hidden=true&type=video&appuid=6694a7ab0000000003033310&author_share=1&xsec_token=DBFAwOvqyVFaI5qGDwj1O4JKQe6Dpz6Cha_RI5CLNrmfw=&xsec_source=app_share&xhsshare=WeixinSession&shareRedId=ODw7NEQ8RUs2NzUyOTgwNjY2OTo3ODc5&share_id=7be7f6877be449deb55d683e6c860ba0">【小红书】</a></p>
<p><img src="https://c5a6b8d.webp.li/2025/01/Rainmeter.png"></p>
<p>rainmeter：<a href="https://www.rainmeter.net/">https://www.rainmeter.net/</a></p>
<p>皮肤文件：<a href="https://www.deviantart.com/hiphopium/art/Lumiero-828277050">https://www.deviantart.com/hiphopium/art/Lumiero-828277050</a></p>
<p>模板Blue Mountain_Theme：<a href="https://www.deviantart.com/hoangnobitang/art/Aesthetic-Desktop-with-Blue-Mountain-852200384">https://www.deviantart.com/hoangnobitang/art/Aesthetic-Desktop-with-Blue-Mountain-852200384</a></p>
<p>MEGA: <a href="https://mega.nz/file/R4dRFSjD#PvO5Qa1FdbqqEJNhaxgsje4o0R744EVNRKhNOXCSO5w">https://mega.nz/file/R4dRFSjD#PvO5Qa1FdbqqEJNhaxgsje4o0R744EVNRKhNOXCSO5w</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Rainmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>7款“限时免费”软件，下载就赚到，白嫖好几白刀</title>
    <url>/25473.html</url>
    <content><![CDATA[<h1 id="Coolmuster-iPhone-Data-Recovery"><a href="#Coolmuster-iPhone-Data-Recovery" class="headerlink" title="Coolmuster iPhone Data Recovery"></a>Coolmuster iPhone Data Recovery</h1><p><strong>Coolmuster iPhone Data Recovery</strong> 是一款专为 iOS 用户设计的数据恢复工具，能够帮助你轻松找回因误删、系统故障或升级失败等原因丢失的数据。无需繁琐操作，只需 3 个步骤，即可从 iPhone&#x2F;iPad 设备或 iTunes 备份中快速恢复数据。<br>它支持恢复多种类型的数据，包括短信、联系人、通话记录、照片、视频、备忘录等，兼容多种 iOS 设备和版本，是数据意外丢失时的可靠助手。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/iphone_data_recovery.png"></p>
<p><strong>限时免费地址：【<a href="https://www.lingdu80.com/?golink=aHR0cHM6Ly93d3cuY29vbG11c3Rlci5jb20vZ2l2ZWF3YXkvaXBob25lLWRhdGEtcmVjb3ZlcnkuaHRtbA==">链接直达</a>】</strong></p>
<p>注意：免费截止时间为 2025年5月11日24时 ，需要的别错过！</p>
<h1 id="Caesium-–-图片批量压缩软件"><a href="#Caesium-–-图片批量压缩软件" class="headerlink" title="Caesium – 图片批量压缩软件"></a>Caesium – 图片批量压缩软件</h1><p>Caesium Image Compressor 是一款图像批量压缩工具。支持 JPG、PNG 和 WebP 格式，可以在保持图像整体质量的情况下快速减小文件大小（如果需要，还可以减小分辨率）。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/caesium.png"></p>
<p>使用非常简单，直接将图片拖进去，点击压缩就行：</p>
<h3 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h3><ul>
<li><strong>Windows</strong>：10（版本 1809 或更高版本）（Windows 7 或 8 使用旧版本 v1.x –<a href="https://www.lingdu80.com/?golink=aHR0cHM6Ly93d3cuZm9zc2h1Yi5jb20vQ2Flc2l1bS1JbWFnZS1Db21wcmVzc29yLW9sZC5odG1s">链接</a>）</li>
<li><strong>MacOS</strong>：10.15+</li>
<li><strong>Linux</strong>：在 Ubuntu 22.04 和 Manjaro 上测试</li>
</ul>
<p>注意：仅支持 64 位版本</p>
<p><strong>官方下载：【<a href="https://github.com/Lymphatus/caesium-image-compressor/releases/tag/v2.8.4">链接直达</a>】或 【<a href="https://www.dongli7.com/thread-875-1-1.html">网盘打包下载</a>】</strong></p>
<p>压缩效果非常不错，原先800多M的图片，在几乎不牺牲画质的情况下，帮我节省了700多M的空间，压缩后只剩100M左右！</p>
<h1 id="dupeGuru-–-电脑重复文件查找工具，支持跨平台使用"><a href="#dupeGuru-–-电脑重复文件查找工具，支持跨平台使用" class="headerlink" title="dupeGuru – 电脑重复文件查找工具，支持跨平台使用"></a>dupeGuru – 电脑重复文件查找工具，支持跨平台使用</h1><p>dupeGuru 是一款跨平台的重复文件查找工具，支持 Linux、macOS 和 Windows 系统。</p>
<p>它可以通过文件名或文件内容进行扫描。其中，文件名扫描采用模糊匹配算法，即使文件名不完全一致，也能识别出重复项。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/dupeGuru.png"></p>
<p><strong>针对音乐文件</strong>：<br>dupeGuru 提供专门的“音乐模式”，支持扫描音频文件的 ID3 标签，并在结果中显示详细的音乐信息。</p>
<p><strong>针对图片文件</strong>：<br>它还具备“图片模式”，可以模糊识别图片内容，帮助你找到相似但不完全相同的图片。</p>
<p>此外，dupeGuru 支持中文界面，使用更便捷。</p>
<p><strong>官方免费下载【<a href="https://dupeguru.voltaicideas.net/">点击前往</a>】</strong></p>
<p><strong>dupeGuru</strong>可自定义。您可以调整其匹配引擎，以准确找到您想要的重复项。帮助文件的“首选项”页面列出了所有您可以更改的扫描引擎设置。</p>
<p><strong>dupeGuru</strong>非常安全。它的引擎设计充分考虑了安全性。它的参考目录系统和分组系统可以防止您误删文件。</p>
<p>随意处理重复文件。您不仅可以删除 dupeGuru 找到的重复文件，还可以将其移动或复制到其他地方。此外，还有多种筛选和排序结果的方法，轻松剔除虚假重复文件（适用于低门槛扫描）。</p>
<p>支持的语言：英语、法语、德语、中文（简体）、捷克语、意大利语、亚美尼亚语、俄语、乌克兰语、巴西语、越南语。</p>
<h1 id="Auto-Mouse-Clicker-鼠标自动点击器"><a href="#Auto-Mouse-Clicker-鼠标自动点击器" class="headerlink" title="Auto Mouse Clicker 鼠标自动点击器"></a>Auto Mouse Clicker 鼠标自动点击器</h1><p> <strong>Auto Mouse Clicker</strong>是一款简单易用的桌面点击软件，可以自动执行鼠标点击操作。借助这款程序，您可以自动化工作流程，提高工作效率，并节省时间，无需手动执行繁琐的任务。</p>
<p>该程序可以模拟鼠标左键、右键和中键在任何窗口上的点击，让用户免于重复点击。该软件会根据坐标映射屏幕，确保点击位置准确，符合用户的预期。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/Auto_Mouse.png"></p>
<p><strong>免费下载：【<a href="https://pan.tuio.cc/s/39gf8">点击前往</a>】</strong></p>
<h2 id="自动执行重复性任务"><a href="#自动执行重复性任务" class="headerlink" title="自动执行重复性任务"></a>自动执行重复性任务</h2><p>无论您是游戏玩家，还是需要定期执行重复性任务的专业人士，<strong>Vovsoft Auto Mouse Clicker</strong>都能帮助您快速轻松地实现目标。该软件可用于自动执行各种任务，例如点击按钮和浏览网页。</p>
<p>在玩你最喜欢的游戏时，没有什么比为了完成某些任务而点击数千次更无聊的了。攻击敌人、建造建筑以及更多需要大量点击的任务会浪费你的时间，让你感到无聊，甚至会导致手腕疼痛和鼠标损坏。有些游戏会强制你点击同一个点数百次。你需要的，也是你一直在寻找的，是一款能够让你创建任意次数自动点击的软件。</p>
<h2 id="自动鼠标移动器和点击器"><a href="#自动鼠标移动器和点击器" class="headerlink" title="自动鼠标移动器和点击器"></a>自动鼠标移动器和点击器</h2><p>这款易于使用的软件是一款自动鼠标移动和点击实用程序，可满足您的自动点击需求。它不仅适合在游戏中自动点击，也适用于整个计算机，因为它可以触发任何任务。</p>
<p>您可以随时播放录音。此程序允许您选择循环次数。因此，您可以根据需要选择点击次数，或创建无限循环。无限循环选项会持续播放录音，直到您使用热键停止。</p>
<p>用户可以自由选择<strong>基于时间的录制</strong>或<strong>基于事件的录制</strong>。基于时间的录制会考虑鼠标移动之间的时间间隔，而基于事件的录制则会忽略鼠标移动之间的时间间隔。</p>
<p>该软件自带热键功能，可用作宏录制器。此外，它还支持将录制的宏保存为 CSV 文件。该文件包含 X 位置、Y 位置、鼠标中键、鼠标左键和鼠标右键的数据。您可以在保存宏之前删除数据中的条目。该软件支持文件拖放、保存到文件、从文件加载以及使用命令行参数运行。这些功能为您的工作流程增添了更多灵活性和便捷性。示例：clicker.exe DoSomething.csv</p>
<p><strong>类别：</strong>系统实用程序<img src="https://vovsoft.com/images/postbullets.png" alt="-">自动化工具</p>
<p><strong>支持：</strong> <img src="https://vovsoft.com/images/windows16.png" alt="视窗"> Windows 11、Windows 10、Windows 8&#x2F;8.1、Windows 7、Windows Vista、Windows XP（32 位和 64 位)</p>
<h1 id="FieldCam-–-支持-GPS-坐标的专业拍照工具限时免费"><a href="#FieldCam-–-支持-GPS-坐标的专业拍照工具限时免费" class="headerlink" title="FieldCam – 支持 GPS 坐标的专业拍照工具限时免费"></a>FieldCam – 支持 GPS 坐标的专业拍照工具限时免费</h1><p><strong>FieldCam</strong> 是一款为专业人士和冒险家量身打造的终极拍照工具，帮助你精准记录每一张照片的地理位置信息。这款功能强大的相机应用专为工程师、测量员、户外运动爱好者以及所有注重地理空间精度的人设计。它不仅能够将拍摄的照片与 GPS 坐标等重要数据无缝叠加，还能帮助你更高效地管理项目，确保每个细节都清晰、井井有条。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/FieldCam.png"></p>
<p><strong>限免地址：【<a href="https://www.lingdu80.com/?golink=aHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS9jbi9hcHAvZ3BzLW5hdi1zdXJ2ZXktY2FtZXJhL2lkNjczODAyMjQxNA==">链接直达</a>】</strong></p>
<p>点击主界面左上角的设置按钮，启用“Use Custom GPS Location”选项时，将弹出购买提示。点击“购买”后，您将进入内购页面，目前完整版的价格为 0 元。</p>
<h1 id="WattageViewer-–-mac充电功率实时查看工具【限时免费】"><a href="#WattageViewer-–-mac充电功率实时查看工具【限时免费】" class="headerlink" title="WattageViewer – mac充电功率实时查看工具【限时免费】"></a>WattageViewer – mac充电功率实时查看工具【限时免费】</h1><p><strong>WattageViewer</strong> 是一款轻量级 macOS 工具，可在顶部菜单栏实时显示为 MacBook 供电的功率信息。它不仅支持查看充电功率（瓦特），还可显示当前的电压（V）与电流（A），让你随时掌握充电状态，电源信息一目了然。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/wattageViewer.png"></p>
<p><strong>限免下载链接：</strong></p>
<p><a href="https://apps.apple.com/cn/app/wattageviewer/id1548099536"><br><img src="https://www.freedidi.com/wp-content/uploads/2025/05/cf74e0a00420250505223939.svg" alt="WattageViewer 图标"></a></p>
<h1 id="【限免】Vovsoft-Sitemap-Generator-–-网站地图生成器！"><a href="#【限免】Vovsoft-Sitemap-Generator-–-网站地图生成器！" class="headerlink" title="【限免】Vovsoft Sitemap Generator – 网站地图生成器！"></a>【限免】Vovsoft Sitemap Generator – 网站地图生成器！</h1><p><strong>Vovsoft Sitemap Generator</strong>是一款轻量级的网站爬虫，旨在帮助您通过几个简单的步骤轻松创建站点地图。它在多种情况下都能派上用场，并且拥有简洁易用的图形用户界面。这款应用程序非常适合需要快速轻松地创建站点地图的用户，因为它不需要您在执行扫描之前完成任何复杂的配置。</p>
<p>该应用程序能够忽略某些不重要的扩展名，这些扩展名只会不必要地增加扫描时间。此外，特定的 URL 也可以忽略。扫描完成后，程序允许您将结果导出为 XML、CSV、TXT 或 HTML 文件。XML 文件可以提交给主流搜索引擎（Google、Bing、Yandex 等），而 HTML 站点地图则可让网站访问者轻松浏览您的网站。</p>
<p>使用此 XML 站点地图生成器，您可以为 Google 和其他搜索引擎创建站点地图。请将您的 XML 站点地图提交至“Google Search Console”。作为网站所有者，您应该保持站点地图的更新。Google 机器人会定期读取您的站点地图，因此请确保包含您希望 Google 抓取的所有内容。避免在站点地图中包含不应出现在搜索结果中的网址。这会将您的抓取预算浪费在不应被编入索引的页面上。</p>
<p><img src="https://c5a6b8d.webp.li/2025/05/vovsoft.png"></p>
<p>限免地址：【**<a href="https://www.lingdu80.com/?golink=aHR0cHM6Ly92b3Zzb2Z0LmNvbS9naXZlYXdheS9mcmVlLXNpdGVtYXAtZ2VuZXJhdG9yLTIwMjUv">链接直达</a>**】</p>
<p>限免截止时间：2025年5月11日</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Winows</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>六款免费开源工具提升工作学习效率</title>
    <url>/52084.html</url>
    <content><![CDATA[<p>六款免费开源工具提升工作学习效率，其中有AI一键换衣，扣除图片背景和水印，音视频人声分离，可以单独部署的清爽备忘录，开发者环境一键配置，帮你节省时间提升效率，赶紧收藏起来</p>
<h1 id="visual-try-on"><a href="#visual-try-on" class="headerlink" title="visual-try-on"></a>visual-try-on</h1><p>visual-try-on 是一款一键 AI 换衣的开源项目，可以完全免费使用，基于 Kolors 图像模型开发，可在任何电商网站上，上传一张自己照片，即可一键让自己试穿喜欢的衣服。</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/visual-try-on.jpeg" alt="visual-try-on"></p>
<p>在线体验：<a href="https://huggingface.co/spaces/Kwai-Kolors/Kolors-Virtual-Try-On">https://huggingface.co/spaces/Kwai-Kolors/Kolors-Virtual-Try-On</a></p>
<p>GitHub 开源：<a href="https://github.com/shyjal/visual-try-on">https://github.com/shyjal/visual-try-on</a></p>
<h1 id="WebGPU"><a href="#WebGPU" class="headerlink" title="WebGPU"></a>WebGPU</h1><p>WebGPU 是一款可以在线抠图的程序，一键去除图片背景，完全免费开源！</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/WEBGPU.png" alt="WEBGPU"></p>
<p>在线体验：<a href="https://huggingface.co/spaces/Xenova/remove-background-webgpu">https://huggingface.co/spaces/Xenova/remove-background-webgpu</a></p>
<p>GitHub 开源：<a href="https://huggingface.co/briaai/RMBG-1.4">https://huggingface.co/briaai/RMBG-1.4</a></p>
<h1 id="Inpaint-web"><a href="#Inpaint-web" class="headerlink" title="Inpaint-web"></a>Inpaint-web</h1><p>Inpaint-web 是基于 Webgpu 技术和 wasm 技术的免费开源 inpainting &amp; image-upscaling 工具, 纯浏览器端实现。</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/Inpaint-web.png" alt="Inpaint-web"></p>
<p>在线体验：<a href="https://inpaintweb.lxfater.com/">https://inpaintweb.lxfater.com/</a></p>
<p>GitHub 开源：<a href="https://github.com/lxfater/inpaint-web">https://github.com/lxfater/inpaint-web</a></p>
<h1 id="Vocal-Remover-and-Isolation"><a href="#Vocal-Remover-and-Isolation" class="headerlink" title="Vocal Remover and Isolation"></a>Vocal Remover and Isolation</h1><p>Vocal Remover and Isolation 是一款功能非常强大的人声分离器，可以完全免费在线使用</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/Vocal-Remover.png" alt="Vocal-Remover"></p>
<p>在线体验：<a href="https://vocalremover.org/">https://vocalremover.org/</a></p>
<h1 id="memos"><a href="#memos" class="headerlink" title="memos"></a>memos</h1><p>这是一个采用 React+Tailwind+TypeScript+Go 开发的备忘录中心，相当于极简的微博。支持私有&#x2F;公开备忘录、标签、互动式日历等功能，以及 Docker 部署。</p>
<p>完全开源、自托管的笔记解决方案，专为无缝部署和多平台访问而设计。体验轻松无痛的纯文本书写，并辅以强大的 Markdown 语法支持，以增强格式设置。</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/memos.png" alt="memos"></p>
<p>在线体验：<a href="https://demo.usememos.com/explore">https://demo.usememos.com/explore</a></p>
<p>GitHub 开源：<a href="https://github.com/usememos/memos?tab=readme-ov-file">https://github.com/usememos/memos?tab=readme-ov-file</a></p>
<h1 id="Omakub"><a href="#Omakub" class="headerlink" title="Omakub"></a>Omakub</h1><p>Omakub 是一个专为开发者设计的 Ubuntu 环境配置项目，由 Ruby on Rails 的创造者 David Heinemeier Hansson（DHH）发起。其目标是通过一条命令将全新的 Ubuntu 系统转化为一个配置完备、美观且现代化的 Web 开发系统，简化开发环境的搭建过程。</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/omakub.png" alt="omakub"></p>
<p>官网地址：<a href="https://omakub.org/">https://omakub.org</a></p>
<p>GitHub 开源：<a href="https://github.com/basecamp/omakub">https://github.com/basecamp/omakub</a></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Windows</tag>
        <tag>Mac</tag>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>xAI 最新大模型！Grok-Beta 开启公测，每月免费提供25美金的使用额度！</title>
    <url>/47114.html</url>
    <content><![CDATA[<p><img src="https://c5a6b8d.webp.li/2024/12/grok-beta.png" alt="grok-beta"></p>
<p>就在前几天，由马斯克xAI推出的大模型Grok，正式开启API的免费公测！人人均可参与，为每个账号每个月提供了25美金的免费使用额度。xAI公开了这个全新的Grok模型，代号「grok-beta」</p>
<p>该模型上下文长度为128000 token，这意味着Grok可以处理更长的文本输入，理解更复杂的上下文关系；</p>
<p>目前来说，性能应该处于 GPT 4o mini 和GPT 4o之间，值得一提的是，考虑到用户的使用体验，xAI的REST API完全兼容Open AI和Anthropic的API，这对于新手来说上手就比较容易了！你可以使用零度之前给大家介绍过的免费开源程序ChatBox来进行调用API。</p>
<p>接下来我们就来详细演示下，如何免费注册并使用grok-beta AI 模型……</p>
<p>Grok-Beta 公测官网链接： <a href="https://x.ai/">https://x.ai/</a></p>
<p>ChatBox 开源客户端下载：<a href="https://github.com/Bin-Huang/chatbox">https://github.com/Bin-Huang/chatbox</a></p>
<p>API接口链接：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://api.x.ai</span><br></pre></td></tr></table></figure>

<p>模型自定义：grok-beta</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON基本概念和用途</title>
    <url>/22725.html</url>
    <content><![CDATA[<h3 id="JSON的定义"><a href="#JSON的定义" class="headerlink" title="JSON的定义"></a>JSON的定义</h3><p>JSON (Javascript Object Notation）是一种轻量級、基于文本的、与语言无关的数据交换格式。</p>
<p>尽管JSON源于JavaScript，但它实际上是一种独立于編程语言的数据格式。这意味着它可以被任何支持JSON的編程语言使用。</p>
<p>JSON的特点</p>
<ol>
<li><p><strong>易于人类调读和编写：</strong>JSON使用简单的键值对结构，类似于许多编程语言中的对象或字典。</p>
<p>数据以层次结构组织，使用花括号 {} 表示对象，方括号 [] 表示数组。</p>
<p>键值对使用冒号 : 分隔，多个项目之问使用逗号 , 分隔。不需要额外的标记或结束标签，减少了复杂性。</p>
<p>JSON数据以键值对的形式表示。</p>
<p>键 (keys）必须是宇符串。</p>
<p>值 (values）可以是以下几种类型：宇符串，数字，对象，数组，布尔值，null。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//###结构和语法</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Harry&quot;</span>,</span><br><span class="line">	<span class="string">&quot;age&quot;</span>: <span class="number">30</span>,</span><br><span class="line">	<span class="string">&quot;isStudent&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">		<span class="string">&quot;street&quot;</span>: <span class="string">&quot;Fleet Street St&quot;</span><span class="string">&quot;city&quot;</span>,</span><br><span class="line">		<span class="string">&quot;Anytown&quot;</span><span class="string">&quot;zipcode&quot;</span>: <span class="string">&quot;263605&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="string">&quot;courses&quot;</span>: [<span class="string">&quot;Math&quot;</span>, <span class="string">&quot;Science&quot;</span>, <span class="string">&quot;History&quot;</span>],</span><br><span class="line">	<span class="string">&quot;score&quot;</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>易于机器解析和生成：</strong>JSON的语法规则非常简单，这使得创建解析器变得相对容易。</p>
<p>解析过程直接，不需要处理复杂的标记或命名空间。</p>
<p>大多数现代编程语言都内置了JSON解析和生成功能。并且许多第三方库提供了高效的JSON处理工具。</p>
</li>
</ol>
<p><img src="https://c5a6b8d.webp.li/2024/09/json-users.png"></p>
<h3 id="JSON的主要用途"><a href="#JSON的主要用途" class="headerlink" title="JSON的主要用途"></a>JSON的主要用途</h3><p>常用于在Web应用程序中传输数据，例如：从服务器向客户端发送数据，以便在网页上显示，也可以反向传输，即从客户端向服务器发送数据。</p>
<h3 id="JSON的解析-Parsing）和宇符串化-Stringifying）过程"><a href="#JSON的解析-Parsing）和宇符串化-Stringifying）过程" class="headerlink" title="JSON的解析 (Parsing）和宇符串化 (Stringifying）过程"></a><strong>JSON的解析 (Parsing）和宇符串化 (Stringifying）过程</strong></h3><p><strong>将JSON宇符串转换为JavaScript对象</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jsonString = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Harry&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="string">&quot;25&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = <span class="title class_">JSON</span>.<span class="property">parse</span> (jsonString) ;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>. <span class="title function_">log</span> (obj.<span class="property">name</span>) ; <span class="comment">// &quot;Harry&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>将JavaScript对象转换为JSON字符串</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;name; <span class="string">&quot;Harry&quot;</span>, <span class="attr">age</span>: <span class="number">25</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>. <span class="title function_">log</span> (jsonString) ;   <span class="comment">//(&quot;&#x27;name&quot; ; &quot;Harry&quot;, &quot;age&quot; :25)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://c5a6b8d.webp.li/2024/09/json-parse.png"></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>link22</title>
    <url>/58540.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://appv2.nloli.xyz/tako_api/sub?token=JZqyFbqrO2K2DNoz&amp;addFlag=yes&amp;subType=shadowrocket</span><br><span class="line"></span><br><span class="line">https://0d000721.paoluz.one/tako_api/sub?token=JZqyFbqrO2K2DNoz&amp;addFlag=yes&amp;subType=shadowrocket</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title>听我一句劝，使用Mac前一定要知道这些资源站</title>
    <url>/51179.html</url>
    <content><![CDATA[<h3 id="MacWK"><a href="#MacWK" class="headerlink" title="MacWK"></a>MacWK</h3><p>MacWK是一个高质量的Mac资源下载平台，致力于为Mac用户提供丰富的软件选择，涵盖办公、创意、效率等多种应用类别。平台界面简洁、分类明确，每个软件都有详细的介绍和安装教程，让新手也能轻松上手。MacWK的资源更新速度快，用户始终可以下载到新版本的软件。无论你是专业创作者、程序员，还是日常办公用户，都能在MacWK找到适合的工具，快速提升生产力和创意效率。</p>
<p><strong>官方地址：</strong><a href="https://macwk.cn/">https://macwk.cn/</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/11/macwk.png" alt="MacWK"></p>
<h3 id="马克菠萝"><a href="#马克菠萝" class="headerlink" title="马克菠萝"></a>马克菠萝</h3><p>马克菠萝是一个专注于Mac应用分享的站点，为用户提供大量正版、精品的Mac软件资源。平台资源丰富，涵盖从设计到开发的各类软件，特别适合内容创作者和设计师。马克菠萝的使用简单易上手，每款软件都附有详细的下载和安装指南，用户体验淑敷。站内还定期分享限时免费资源和优惠信息，让用户享受优质软件的同时节省开支。对于希望提升效率的Mac用户来说，马克菠萝是个不可多得的资源宝库。</p>
<p><strong>官方地址：</strong><a href="https://www.macbl.com/">https://www.macbl.com/</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/11/macbl.png" alt="MacBL"></p>
<h3 id="MacApp分享频道"><a href="#MacApp分享频道" class="headerlink" title="MacApp分享频道"></a>MacApp分享频道</h3><p>MacApp分享频道是一个专门分享Mac应用资源的平台，精选出高质量的软件满足用户的不同需求。平台以提供实用和优质的应用为核心，资源覆盖办公、学习、设计、开发等多个领域。每款软件都有详细的功能介绍和使用教程，帮助用户快速掌握和使用。MacApp分享频道还时常推出一些限时优惠和免费资源，是提升生产力的好手，帮助用户发现更多实用的Mac工具。</p>
<p><strong>官方地址：</strong><a href="https://macapp.org.cn/">https://macapp.org.cn/</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/11/macapp.png" alt="macapp"></p>
<h3 id="XMac"><a href="#XMac" class="headerlink" title="XMac"></a>XMac</h3><p>XMac是一个专为Mac用户打造的资源分享网站，提供丰富的软件资源以及系统工具。平台包含多种类型的应用，适用于不同需求的Mac用户，无论是轻量办公还是深度创作，XMac都有相应的资源。其界面清爽简洁，分类明确，让用户能够快速找到所需应用。XMac还会分享一些新鲜的应用资讯和使用技巧，为用户提供更多关于Mac的实用信息，帮助用户获得更优质的Mac使用体验。</p>
<p><strong>官方地址：</strong><a href="https://xmac.app/">https://xmac.app/</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/11/xmacapp.png" alt="XMac.App"></p>
<h3 id="MacGF"><a href="#MacGF" class="headerlink" title="MacGF"></a>MacGF</h3><p>MacGF是一个深受Mac用户喜爱的资源分享平台，以精选的应用资源和详细的安装教程著称。平台涵盖了从日常工具到专业软件的多类应用，致力于帮助Mac用户快速找到适合自己的软件。MacGF还提供一系列系统优化工具，使用户的Mac保持流畅运行。除了下载资源外，MacGF定期更新软件和实用小技巧，让用户不断提升Mac使用体验。</p>
<p><strong>官方地址：</strong><a href="https://www.macgf.com/">https://www.macgf.com/</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/11/macgfbg.png" alt="MacGF"></p>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac微信插件</title>
    <url>/45630.html</url>
    <content><![CDATA[<p><strong>WeChatHooks v1.2-4：</strong>为WeChat增加</p>
<ul>
<li>撤回消息拦截</li>
<li>增加全局头像圆角</li>
<li>增加折叠群聊置顶</li>
<li>增加导出聊天表情</li>
<li>增加显示非好友微信号</li>
<li>增加文本快捷复读</li>
<li>增加表情快捷复读</li>
<li>增加图片快捷复读</li>
<li>增加收款显示详情</li>
<li>增加退群检测提示</li>
<li>增加禁用日志上报</li>
<li>多开登录账号</li>
</ul>
<p>均在状态工具栏开启</p>
<p><strong>下载地址：</strong><a href="https://github.com/Netskao/MacOS-Utils">https://github.com/Netskao/MacOS-Utils</a></p>
<p><img src="https://c5a6b8d.webp.li/2024/12/mac-wechat-plugins.png"></p>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Nslookup 查询DNS, TXT – nslookup指令集</title>
    <url>/46768.html</url>
    <content><![CDATA[<h4 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h4><p>nslookup [-option] [name | -] [server]<br>nslookup -type&#x3D;any domain.com<br>nslookup -type&#x3D;any domain.com 8.8.8.8<br><strong>type参数</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">any</span><br><span class="line">a: A Record (IP Address)</span><br><span class="line">mx: 邮件服务器</span><br><span class="line">ns: 名称服务器</span><br><span class="line">cname: 查別名</span><br><span class="line">ptr: 由 IP Address 反查域名</span><br><span class="line">hinfo: 查服务器的系统资源</span><br><span class="line">txt: Text如SPF讯息</span><br></pre></td></tr></table></figure>

<h4 id="分段指令"><a href="#分段指令" class="headerlink" title="分段指令"></a>分段指令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nslookup -type=[Type] [NameServer]</span><br><span class="line">set q=[Type]</span><br><span class="line">[NameServer]</span><br></pre></td></tr></table></figure>
<h4 id="扫描所有DNS-Zone-file"><a href="#扫描所有DNS-Zone-file" class="headerlink" title="扫描所有DNS Zone file"></a>扫描所有DNS Zone file</h4><p><strong>Linux:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dig @nameserver example.com axfr</span><br></pre></td></tr></table></figure>
<p><strong>Windows:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nslookup</span><br><span class="line">server nameserver</span><br><span class="line">ls -d example.com</span><br></pre></td></tr></table></figure>
<p>DNS Server一般会都关闭此查询权限…</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Nslookup</tag>
      </tags>
  </entry>
  <entry>
    <title>正版Office全家桶永久免费使用！完全通过官方下载，放心使用</title>
    <url>/35656.html</url>
    <content><![CDATA[<p><img src="https://c5a6b8d.webp.li/2024/10/microsof-office.png" alt="microsoft-office"></p>
<p><strong>1.office 软件部署工具：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117">https://www.microsoft.com/en-us/download/details.aspx?id=49117</a></strong></p>
<p><strong>2.office 版本自定义工具：<a href="https://config.office.com/deploymentsettings">https://config.office.com/deploymentsettings</a></strong></p>
<p><strong>3.基于KMS的 GVLK：<a href="https://learn.microsoft.com/zh-cn/deployoffice/vlactivation/gvlks">https://learn.microsoft.com/zh-cn/deployoffice/vlactivation/gvlks</a></strong></p>
<p>然后以管理员身份运行CMD 进入命令终端</p>
<p><font color=#FF000 >命令终端打开后一般目录是在C盘，比如 C:\Windows\System32&gt;   ，但当你新建的目录未在C盘，当你输入完cd ……命令后，还要再加一个盘符命令才能切换到其他盘，比如我在D盘新建了一个文件夹，我的目录结构是这样的  D:\Downloads\office，那样这样操作：</font></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cd D:\Downloads\office</span><br><span class="line"></span><br><span class="line">D:</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><font color=#FF000 >注意，这样不会将Office安装到你选择的目录，Office还是会安装在C盘，安装时并且无法改变安装位置。</font></p>
<p><strong>下载命令：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setup /download config.xml</span><br></pre></td></tr></table></figure>

<p><strong>安装命令:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setup /configure config.xml</span><br></pre></td></tr></table></figure>

<p><strong>最后激活命令:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd C:\Program Files\Microsoft Office\Office16</span><br><span class="line"></span><br><span class="line">cscript ospp.vbs /sethst:kms.03k.org </span><br><span class="line"></span><br><span class="line">cscript ospp.vbs /act</span><br></pre></td></tr></table></figure>

<p>注意：如果你安装的是32位版本，那么启动命令第一个要改成：cd C:\Program Files (x86)\Microsoft Office\Office16 </p>
<p><strong>安装工具下载：</strong></p>
<p>无需输入复杂的命令，下载此工具后双击exe即可安装，安装完成后激活即可。<strong>无法选择安装目录，默认安装在C盘。</strong></p>
<p>夸克网盘：<a href="https://pan.quark.cn/s/51f7a8183f05">https://pan.quark.cn/s/51f7a8183f05</a></p>
<p>阿里云盘：<a href="https://www.alipan.com/s/5wQyxgviVHW">https://www.alipan.com/s/5wQyxgviVHW</a>   需要下载整个文件夹</p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1o8VZvPT7uKZvEIdcDjYF8w?pwd=pd5x">https://pan.baidu.com/s/1o8VZvPT7uKZvEIdcDjYF8w?pwd=pd5x</a> 提取码: pd5x</p>
<p><img src="https://c5a6b8d.webp.li/2024/10/officeinstall.png" alt="officeinstall"></p>
<p><strong>卸载工具下载：</strong></p>
<p>官网地址：<a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a>  下载免费版即可</p>
<p><img src="https://c5a6b8d.webp.li/2024/10/geek-uninstaller.png"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 重新安装GIT</title>
    <url>/46365.html</url>
    <content><![CDATA[<p>程序员有时候是一种很奇怪的生物，明明系统自带的东西很好用，而且也用的很好，但是就是想用自己统一配置的。比如mac系统默认自带的git想重新安装，用brew统一管理起来。</p>
<h4 id="卸载系统自带的git"><a href="#卸载系统自带的git" class="headerlink" title="卸载系统自带的git"></a>卸载系统自带的git</h4><ul>
<li><p>检查默认git在哪个目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which git</span><br></pre></td></tr></table></figure>
<p>可能会输出 &#x2F;usr&#x2F;bin&#x2F;git</p>
</li>
<li><p>删除git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /usr/bin/git/</span><br><span class="line">sudo rm /etc/paths.d/git</span><br><span class="line">sudo rm /etc/manpaths.d/git</span><br><span class="line">sudo pkgutil --forget --pkgs=GitOSX\.Installer\.git[A-Za-z0-9]*\.[a-z]*.pkg</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="用Brew重新安装git"><a href="#用Brew重新安装git" class="headerlink" title="用Brew重新安装git"></a>用Brew重新安装git</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew uninstall git</span><br><span class="line">brew update</span><br><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<p>重新检查git安装目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which git</span><br></pre></td></tr></table></figure>
<p>现在你可以看到：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;git</p>
<h4 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h4><h5 id="报错信息一"><a href="#报错信息一" class="headerlink" title="报错信息一"></a>报错信息一</h5><p>Mac catalina无法删除 &#x2F;usr&#x2F;bin&#x2F; 下面的文件</p>
<p>sudo rm -rf &#x2F;usr&#x2F;bin&#x2F;git&#x2F;:Operation not permitted</p>
<p>发现是SIP的问题 具体可以见 Mac OS X 10.11+ Rootless 介绍</p>
<blockquote><p>尝试关闭 Rootless。重启电脑一直按住 Command+R，直到进入恢复模式，打开Terminal。<br>输入 csrutil disable<br>重启即可。这样就关掉了Sip 如果要恢复默认，那么只要输入 csrutil enable</p>
</blockquote>
<h5 id="报错信息二"><a href="#报错信息二" class="headerlink" title="报错信息二"></a>报错信息二</h5><p>Read-only file system</p>
<p>执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mount -uw /</span><br></pre></td></tr></table></figure>
<p>再操作就可以了</p>
<p>记得操作完把 sip重新打开</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>screen命令</title>
    <url>/53358.html</url>
    <content><![CDATA[<p>screen 是一个非常有用的命令，提供从单个 SSH 会话中使用多个 shell 窗口（会话）的能力。当会话被分离或网络中断时，screen 会话中启动的进程仍将运行，你可以随时重新连接到 screen 会话。如果你想运行一个持久的进程或者从多个位置连接到 shell 会话，这也很方便。</p>
<p>在本文中，我们将展示在 Linux 上安装和使用 screen 的基本知识。</p>
<ul>
<li><strong>如何安装screen</strong></li>
</ul>
<p>screen 在一些流行的发行版上已经预安装了。你可以使用下面的命令检查是否已经在你的服务器上安装了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -v</span><br><span class="line">Screen version 4.00.03 (FAU)</span><br></pre></td></tr></table></figure>

<p>如果在 Linux 中还没有 screen，你可以使用系统提供的包管理器很简单地安装它。</p>
<p>CentOS&#x2F;RedHat&#x2F;Fedora</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install screen</span><br></pre></td></tr></table></figure>
<p>Ubuntu&#x2F;Debian</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get -y install screen</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>如何启动一个screen会话</strong></li>
</ul>
<p>你可以在命令行中输入 screen 来启动它，接着会有一个看上去和命令行提示符一样的 screen 会话启动。</p>
<p>screen<br>使用描述性名称启动屏幕会话是一个很好的做法，这样你可以轻松地记住会话中正在运行的进程。要使用会话名称创建新会话，请运行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -S name</span><br></pre></td></tr></table></figure>

<p>将 “name” 替换为对你会话有意义的名字。</p>
<ul>
<li><strong>从 screen 会话中分离</strong></li>
</ul>
<p>要从当前的 screen 会话中分离，你可以按下 Ctrl-A 和 d。所有的 screen 会话仍将是活跃的，你之后可以随时重新连接。</p>
<ul>
<li><strong>重新连接到 screen 会话</strong></li>
</ul>
<p>如果你从一个会话分离，或者由于某些原因你的连接被中断了，你可以使用下面的命令重新连接：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r</span><br></pre></td></tr></table></figure>

<p>如果你有多个 screen 会话，你可以用 ls 参数列出它们。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -ls</span><br><span class="line">There are screens on:</span><br><span class="line">7880.session    (Detached)</span><br><span class="line">7934.session2   (Detached)</span><br><span class="line">7907.session1   (Detached)</span><br><span class="line">3 Sockets in /var/run/screen/S-root.</span><br></pre></td></tr></table></figure>

<p>在我们的例子中，我们有三个活跃的 screen 会话。因此，如果你想要还原 “session2” 会话，你可以执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r 7934</span><br></pre></td></tr></table></figure>

<p>或者使用 screen 名称。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r -S session2</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>中止 screen 会话</strong></li>
</ul>
<p>有几种方法来中止 screen 会话。你可以按下 Ctrl+d，或者在命令行中使用 exit 命令。</p>
<p>要查看 screen 命令所有有用的功能，你可以查看 screen 的 man 手册。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">man screen</span><br><span class="line">NAME</span><br><span class="line">screen - screen manager with VT100/ANSI terminal emulation</span><br><span class="line">SYNOPSIS</span><br><span class="line">screen [ -options ] [ cmd [ args ] ]</span><br><span class="line">screen -r [[pid.]tty[.host]]</span><br><span class="line">screen -r sessionowner/[[pid.]tty[.host]]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>某宝花钱买的电脑单机游戏集合700+</title>
    <url>/22718.html</url>
    <content><![CDATA[<p>网友某宝花钱买的电脑单机游戏集合，一共700+款，附带游戏修改器、作弊、优惠代码等等信息，还有赠品，整理成了一个excel文档，游戏存放在百度网盘，感兴趣的可以前往学习。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/single-player-games.png"></p>
<p><strong>下载地址</strong></p>
<p>百度网盘： <a href="https://pan.baidu.com/s/1ZlZXF5MfeUZplRMq4fqsLQ?pwd=fzwh">https://pan.baidu.com/s/1ZlZXF5MfeUZplRMq4fqsLQ?pwd=fzwh</a> 提取码: fzwh </p>
<p>阿里云盘：<a href="https://www.alipan.com/s/QaLh9PzqpnV">https://www.alipan.com/s/QaLh9PzqpnV</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>games</tag>
      </tags>
  </entry>
  <entry>
    <title>软路由上安装esxi</title>
    <url>/57580.html</url>
    <content><![CDATA[<p>最近一直都在找路由器上适配的openWt固件，但是一直找不到。油管上无意间发现现在大家玩的都是软路由，所以现在路由器固件的适配工作明显减少。经过几个月的煎熬，最后还是没有忍住，入手了软路由，那就让我们从软路由的系统着手吧！</p>
<span id="more"></span>
<h5 id="下载VMware"><a href="#下载VMware" class="headerlink" title="下载VMware"></a>下载VMware</h5><ul>
<li><p>注册账号后进行产品评估，评估完成后即可下载</p>
</li>
<li><p><a href="https://my.vmware.com/cn/web/vmware/info/slug/datacenter_cloud_infrastructure/vmware_vsphere/7_0">下载地址：点击跳转到官网下载</a></p>
</li>
</ul>
<h5 id="制作U盘启动工具"><a href="#制作U盘启动工具" class="headerlink" title="制作U盘启动工具"></a>制作U盘启动工具</h5><ul>
<li><a href="https://www.laomaotao.net/">下载完成版老毛桃U盘启动工具</a></li>
<li>插上U盘，解压缩下载文件，运行exe即可</li>
</ul>
<h5 id="安装ESXI系统流程"><a href="#安装ESXI系统流程" class="headerlink" title="安装ESXI系统流程"></a>安装ESXI系统流程</h5><ol>
<li>在U盘根目录新建文件夹MyExt，将下载的VMware镜像放入到该文件夹下；或直接将镜像放到LMT文件夹下也可以</li>
<li>软路由接好键鼠，显示器，插上刚刚制作好的U盘，加电开机，以U盘引导的方式启动进入老毛桃工具</li>
<li>选择【05 DiskGenius 硬盘分区工具】，选择软路由上的硬盘，右键选择删除硬盘所有分区，保存并应用更改</li>
<li>重启软路由，还是以U盘的方式进入引导进入老毛桃工具，选择【10 运行自定义镜像】，进入后选择放入到U盘的Esxi镜像，回车启动。</li>
<li>F11同意协议进入系统，选择将系统安装到哪个盘。安装完成后重启完成</li>
</ol>
<h5 id="设置ESXI（F2进入设置界面）"><a href="#设置ESXI（F2进入设置界面）" class="headerlink" title="设置ESXI（F2进入设置界面）"></a>设置ESXI（F2进入设置界面）</h5><ul>
<li><p>设置ESXI的密码为空</p>
<p>Reset System Configuration（重置系统设置）</p>
</li>
<li><p>配置ESXI后台地址及网关</p>
<p>选择 Configure Management Network—&gt; IPv4 configuration—-&gt;Set static IPv4 address and…..设置好对应的IP</p>
</li>
<li><p>排查ESXI的管理口是否配置正确</p>
<p>选择 Configure Management Network—&gt; Network Adapters 设置所有的端口都为管理口</p>
</li>
<li><p>开启SSH\SHELL等功能</p>
<p>选择 Configure Management Network—&gt;Iroubleshootimg options—&gt;Disable SSH—&gt;Enabled</p>
</li>
<li><p>如何将网卡驱东写入ESXI安装包</p>
</li>
</ul>
<h5 id="填入密钥注册ESXI"><a href="#填入密钥注册ESXI" class="headerlink" title="填入密钥注册ESXI"></a>填入密钥注册ESXI</h5><h5 id="有多快硬盘可以新建数据存储"><a href="#有多快硬盘可以新建数据存储" class="headerlink" title="有多快硬盘可以新建数据存储"></a>有多快硬盘可以新建数据存储</h5><h5 id="让虚拟机自动启动"><a href="#让虚拟机自动启动" class="headerlink" title="让虚拟机自动启动"></a>让虚拟机自动启动</h5><ul>
<li>虚拟机右键设置可自动启动，ESXI里的 管理—也设置成自动启动</li>
</ul>
<h3 id="ESXI设置"><a href="#ESXI设置" class="headerlink" title="ESXI设置"></a>ESXI设置</h3><h5 id="网路设置"><a href="#网路设置" class="headerlink" title="网路设置"></a>网路设置</h5><ul>
<li><p>编辑默认的网络，右键编辑—&gt;安全混杂模式—&gt;接受</p>
</li>
<li><p>添加其他5个虚拟交换机，上行线路不用管【选择对应的】，安全全部接口</p>
</li>
<li><p>添加端口组，选择对应的虚拟交换机</p>
</li>
<li><p>上传固件</p>
</li>
<li><p>选择数据存储，数据存储浏览—&gt;新建文件夹分别存放固件</p>
</li>
</ul>
]]></content>
      <categories>
        <category>routing</category>
      </categories>
      <tags>
        <tag>软路由</tag>
        <tag>esxi</tag>
      </tags>
  </entry>
  <entry>
    <title>这六款神级软件！ 绝对让你相见恨晚，免费开源</title>
    <url>/46815.html</url>
    <content><![CDATA[<h2 id="Umi-OCR"><a href="#Umi-OCR" class="headerlink" title="Umi-OCR"></a>Umi-OCR</h2><ul>
<li><p><strong>免费</strong>：本项目所有代码开源，完全免费。</p>
</li>
<li><p><strong>方便</strong>：解压即用，离线运行，无需网络。</p>
</li>
<li><p><strong>高效</strong>：自带高效率的离线OCR引擎，内置多种语言识别库。</p>
</li>
<li><p><strong>灵活</strong>：支持命令行、HTTP接口等外部调用方式。</p>
</li>
<li><p><strong>功能</strong>：截图OCR &#x2F; 批量OCR &#x2F; PDF识别 &#x2F; 二维码 &#x2F; 公式识别<br><img src="https://c5a6b8d.webp.li/2024/09/umi-ocr2.png"><br><img src="https://c5a6b8d.webp.li/2024/09/umi-ocr1.png"></p>
</li>
<li><p><strong>下载方式</strong></p>
<p>GitHub：  <a href="https://github.com/hiroi-sora/Umi-OCR/releases">https://github.com/hiroi-sora/Umi-OCR/releases</a></p>
<p>网盘下载：<a href="https://www.alipan.com/s/YuPQdwDNAPC">https://www.alipan.com/s/YuPQdwDNAPC</a></p>
</li>
</ul>
<h2 id="NDM"><a href="#NDM" class="headerlink" title="NDM"></a>NDM</h2><p>许多人可能会认为IDM是最出色的下载器，但若要挑选一个与之匹敌的，NDM无疑也是一个极佳的选择。</p>
<p>NDM也支持最高32线程的下载，从而使得原本耗时1-2小时的下载任务，如今可能仅在十几分钟乃至几分钟内便能迅速完成。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/ndm.png"></p>
<p><strong>简洁的下载管理器</strong></p>
<ul>
<li>使用优化的动态分割算法。</li>
<li>加快您的下载速度，直至达到您的总可用带宽。</li>
<li>根据下载状态（完成、不完整）和文件类型（视频、文档等）组织您的下载</li>
<li>支持 HTTP、HTTPS 和 FTP 协议。</li>
<li>支持 HTTP 代理和 SOCKS 协议。</li>
<li>支持 HTTP 身份验证和代理身份验证（Basic、Digest、NTLM）</li>
<li>具有暂停&#x2F;恢复功能并可以恢复崩溃的下载。</li>
<li>具有浏览器扩展功能，可以向其发送下载链接并帮助您从任何网站下载视频&#x2F;音频。</li>
<li>即使下载正在进行中，您也可以设置下载的带宽限制。</li>
<li>即使下载正在进行中，您也可以设置下载的最大连接数。</li>
<li>可以下载 HLS 视频的所有 .ts 文件，并在最后将所有片段合并为一个 .ts 文件。</li>
<li>可以续订过期的下载。</li>
<li>通过拖放操作进行操作</li>
</ul>
<p><strong>NMD 下载方式：</strong></p>
<p>官方下载： <a href="https://www.neatdownloadmanager.com/index.php/en/">https://www.neatdownloadmanager.com/index.php/en/</a></p>
<p>网盘下载：  <a href="https://www.alipan.com/s/YuPQdwDNAPC">https://www.alipan.com/s/YuPQdwDNAPC</a></p>
<h2 id="DiskGenius"><a href="#DiskGenius" class="headerlink" title="DiskGenius"></a>DiskGenius</h2><p>专业的数据恢复和分区管理软件，各种文件恢复和分区问题都可以解决。这个软件更适合专业搞机用户使用，小白可以用分区助手，更好上手。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/DiskGenius.png"></p>
<p><strong>DiskGenius下载：</strong></p>
<p>官方下载：<a href="https://www.diskgenius.com/">https://www.diskgenius.com/</a></p>
<h2 id="HandBrake"><a href="#HandBrake" class="headerlink" title="HandBrake"></a>HandBrake</h2><p>HandBrake 是一个由志愿者构建的开源工具，用于将几乎任何格式的视频转换为多种现代且广泛支持的编解码器。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/HandBrake.png"></p>
<p><strong>您会喜欢 HandBrake 的原因：</strong></p>
<ul>
<li>转换几乎任何格式的视频</li>
<li>免费且开源</li>
<li>多平台（Windows、Mac 和 Linux）</li>
</ul>
<p><strong>下载方式：</strong></p>
<p>1、官方下载：<a href="https://handbrake.fr/">https://handbrake.fr/</a></p>
<p>2、网盘下载：<a href="https://www.alipan.com/s/YuPQdwDNAPC">https://www.alipan.com/s/YuPQdwDNAPC</a></p>
<h2 id="Powertoys"><a href="#Powertoys" class="headerlink" title="Powertoys"></a>Powertoys</h2><p><strong>Microsoft PowerToys</strong>是一组免费的系统工具软件，由微软为Windows操作系统上的系统管理员设计。这些程序为系统加入或变更了一些功能，并加入更多自定义选项以提高生产力。PowerToys可用于Windows 95、Windows XP、Windows 10和Windows11。Windows 10版PowerToys为自由及开放源代码软件，并使用MIT授权条款托管于GitHub。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/power-toys.png"></p>
<p><strong>下载方式：</strong></p>
<p>1、微软应用商店下载：<a href="https://apps.microsoft.com/store/detail/microsoft-powertoys/XP89DCGQ3K6VLD">https://apps.microsoft.com/store/detail/microsoft-powertoys/XP89DCGQ3K6VLD</a></p>
<p>2、Github开源项目：<a href="https://github.com/microsoft/PowerToys">https://github.com/microsoft/PowerToys</a></p>
<p>3、网盘打包下载：<a href="https://www.alipan.com/s/YuPQdwDNAPC">https://www.alipan.com/s/YuPQdwDNAPC</a></p>
<h2 id="pdf-24"><a href="#pdf-24" class="headerlink" title="pdf-24"></a>pdf-24</h2><p>一个非常好用的 PDF 处理工具，共 27 个工具，完全免费、无广告，没有任何套路，而且支持离线使用。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/pdf-24.png"></p>
<p><strong>下载方式：</strong></p>
<p>官方下载：<a href="https://tools.pdf24.org/zh/">https://tools.pdf24.org/zh/</a></p>
<p>网盘下载：<a href="https://www.alipan.com/s/YuPQdwDNAPC">https://www.alipan.com/s/YuPQdwDNAPC</a></p>
]]></content>
      <categories>
        <category>Windows</category>
        <category>软件推荐</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows电脑装机必备，精选7个神仙级软件工具</title>
    <url>/45555.html</url>
    <content><![CDATA[<h3 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h3><p>qBittorrent 是一个用 C++ &#x2F; Qt 编写的 bittorrent 客户端，它使用 Arvid Norberg 的 libtorrent（有时称为 libtorrent-rasterbar）。</p>
<p>它旨在成为所有其他 bittorrent 客户端的良好替代品。qBittorrent 速度快、稳定，并提供 unicode 支持以及许多功能。</p>
<p><a href="https://db-ip.com/">DB-IP</a>提供的免费<a href="https://db-ip.com/db/download/ip-to-country-lite">IP 到 Country Lite 数据库</a>用于解析同行的国家&#x2F;地区。该数据库根据<a href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a>获得许可。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-pddf.png"></p>
<p><strong>下载方式：</strong></p>
<p>GitHub： <a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition">https://github.com/c0re100/qBittorrent-Enhanced-Edition</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="File-Converter"><a href="#File-Converter" class="headerlink" title="File Converter"></a>File Converter</h3><p><strong>Zamzar 的文件转换器</strong>是一款简单的工具，它允许您使用文件资源管理器中的上下文菜单转换文件。它支持 100 种不同的格式，包括文档、图像、音频、视频等。而且，您可以<strong>免费</strong>下载和转换前 25 个文件！</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/file-converter-usage-mac.gif"></p>
<p><strong>下载方式：</strong></p>
<p>官网：  <a href="https://file-converter.org/">https://file-converter.org/</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="Kcleaner"><a href="#Kcleaner" class="headerlink" title="Kcleaner"></a>Kcleaner</h3><p>谁未曾在Windows系统中看见过关于 <em>磁盘空间</em> 的临时通知？文件信息不断增加，占用了越来越多的硬盘空间，还有不少其它程序占用了我们那少的可怜的硬盘空间。</p>
<p><strong>KCleaner</strong>是一款免费的Windows软件，它允许你最大限度的释放硬盘空间。程序通过删除其它程序生成临时文件为你节省更多空间。</p>
<p>使用KCleaner清除的文件可能是浏览器缓存、Windows临时文件、存储在电脑中的cookies或“回收站”中的临时文件。</p>
<p>因此，有了KCleaner，你永远都能获取更多空间，以防紧急情况。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-qflj.png"></p>
<p><strong>下载方式：</strong></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="dism"><a href="#dism" class="headerlink" title="dism++"></a>dism++</h3><p>DISM++，是一款轻量级的系统优化工具。我们常使使用它来修复系统，添加或者备份驱动。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-qlhs.png"></p>
<p><strong>下载方式：</strong></p>
<p>GitHub：<a href="https://github.com/Chuyu-Team/Dism-Multi-language">https://github.com/Chuyu-Team/Dism-Multi-language</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="hwinfo"><a href="#hwinfo" class="headerlink" title="hwinfo"></a>hwinfo</h3><p>专业系统信息和诊断，针对 Windows 和 DOS 的全面硬件分析、监控和报告。</p>
<p>从快速概览开始深入介绍所有硬件组件。始终保持最新状态，支持最新技术和标准。</p>
<p>准确监控所有系统组件的实际状态和故障预测。可定制的界面，具有多种选项。优化以降低开销。</p>
<p>多种类型的报告、状态记录以及与其他工具或附加组件的交互。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-qvhd.png"></p>
<p><strong>下载方式：</strong></p>
<p>官网：<a href="https://hwinfo.com/">https://hwinfo.com</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="Pshutdown"><a href="#Pshutdown" class="headerlink" title="Pshutdown"></a>Pshutdown</h3><p>是一个轻量级但是功能强大的电脑开关机管理工具。可定时实现，关机、重启、注销、运行程序、运行报警，关掉显示器或显示一条消息。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-qvly.png"></p>
<p><strong>下载方式：</strong></p>
<p>谷歌：<a href="https://code.google.com/archive/p/pshutdown/downloads">https://code.google.com/archive/p/pshutdown/downloads</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
<h3 id="geek-uninstaller"><a href="#geek-uninstaller" class="headerlink" title="geek uninstaller"></a>geek uninstaller</h3><p>能够帮助我们卸载电脑上的程序，并且清理其在注册表留下的信心，从而做到彻底卸载。免费版已经足够使用！</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/SCR-20240916-rbou.png"></p>
<p><strong>下载方式：</strong></p>
<p>官网：<a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a></p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw">https://pan.baidu.com/s/1VYp2ZC52bFhSTf104UndbQ?pwd=8njw</a><br>提取码：8njw </p>
]]></content>
      <categories>
        <category>Windows</category>
        <category>软件推荐</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot启动服务卡住无日志输出</title>
    <url>/4847.html</url>
    <content><![CDATA[<p>今天我们来介绍下spring boot 启动时候如果卡住，就是无日志输出，也不报错的几种解决方法</p>
<p><strong>断点设置太多</strong></p>
<p>这时可以打开IDEA的断点视图，查看哪些代码有断点并去掉就行了。或者干脆禁用掉整个项目的断点功能也行。<br><img src="https://c5a6b8d.webp.li/2024/09/breakpoints.png"></p>
<span id="more"></span>
<p><strong>日志级别</strong></p>
<p>检查自己项目中的日志级别，看是否是ERROR级别还是日志设置未生效等日志原因。</p>
<p><strong>新增异常捕捉代码块</strong></p>
<p>在spring boot的main方法的启动代码上新增try catch 代码块。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	<span class="comment">//...</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">	e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>日志被捕获</strong></p>
<p>查看日志是否被其他框架捕获或者截取，先暂时屏蔽捕获的框架或停止使用这个框架。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 超级精简版！ Tiny11 （24H2） 官方下载ISO</title>
    <url>/62064.html</url>
    <content><![CDATA[<p>Tiny 11 24H2 是一款非常适合想要在旧硬件上运行 Windows 11 的用户的系统安装包！，是目前最精简的版本</p>
<p>借助 Tiny 11 和 LZX 压缩给 Windows 11 进行了全身上下的瘦身，占用空间仅为 100MB ，甚至可以在一个单层的DVD上进行安装，<br>安装后硬盘占用约 3.5GB 的空间。</p>
<p><img src="https://c5a6b8d.webp.li/2024/11/windows11-tiny11-24H2.png" alt="windows11-tiny11-24H2"></p>
<p><strong>Windows 11 Tiny 11 （24H2）下载方式</strong></p>
<p><strong>1、官方下载：【<a href="https://archive.org/details/tiny11-2409">点击前往</a>】</strong></p>
<p><strong>2、更多下载 ：【<a href="https://www.dongli7.com/thread-171-1-1.html">点击前往</a>】</strong></p>
<h2 id="制作U盘系统安装盘："><a href="#制作U盘系统安装盘：" class="headerlink" title="制作U盘系统安装盘："></a>制作U盘系统安装盘：</h2><p>1、Rufus 【<a href="https://rufus.ie/zh/">官方下载</a>】</p>
<p>2、Ventoy 【<a href="https://www.ventoy.net/cn/download.html">官方下载</a>】</p>
<h3 id="Windows-11-2024-LTSC-长期服务版-KMS-官方密钥获取："><a href="#Windows-11-2024-LTSC-长期服务版-KMS-官方密钥获取：" class="headerlink" title="Windows 11 2024 LTSC 长期服务版 KMS 官方密钥获取："></a>Windows 11 2024 LTSC 长期服务版 KMS 官方密钥获取：</h3><p>【**<a href="https://learn.microsoft.com/en-us/windows-server/get-started/kms-client-activation-keys?tabs=server2025,windows1110ltsc,version1803,windows81">点击前往</a>**】</p>
<p>激活命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">slmgr -ipk 这里填写视频里演示的密钥</span><br><span class="line"></span><br><span class="line">slmgr -skms kms.03k.org </span><br><span class="line"></span><br><span class="line">slmgr -ato</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>windows key</tag>
      </tags>
  </entry>
  <entry>
    <title>vagrant</title>
    <url>/40780.html</url>
    <content><![CDATA[<h3 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h3><p>久闻Vagrant大名，之前经常看到有开源项目使用它作为分布式开发的环境配置。</p>
<p>因为今天在看contiv正好里面使用vagrant搭建的开发测试环境，所以顺便了解下。它的Vagrantfile文件中定义了三台主机。并安装了很多依赖软件，如consul、etcd、docker、go等，整的比较复杂。</p>
<span id="more"></span>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vagrant status</span><br><span class="line">Current machine states:</span><br><span class="line"></span><br><span class="line">netplugin-node1           running (virtualbox)</span><br><span class="line">netplugin-node2           running (virtualbox)</span><br><span class="line">netplugin-node3           running (virtualbox)</span><br><span class="line"></span><br><span class="line">This environment represents multiple VMs. The VMs are all listed</span><br><span class="line">above with their current state. For more information about a specific</span><br><span class="line">VM, run `vagrant status NAME`.</span><br></pre></td></tr></table></figure>

<p>Vagrant是hashicorp这家公司的产品，这家公司主要做数据中心PAAS和虚拟化，其名下大名鼎鼎的产品有Consul、Vault、Nomad、Terraform。他们的产品都是基于Open Source的Github地址。</p>
<h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p>Vagrant是用来管理虚拟机的，如VirtualBox、VMware、AWS等，主要好处是可以提供一个可配置、可移植和复用的软件环境，可以使用shell、chef、puppet等工具部署。所以vagrant不能单独使用，如果你用它来管理自己的开发环境的话，必须在自己的电脑里安装了虚拟机软件，我使用的是virtualbox。</p>
<p>Vagrant提供一个命令行工具vagrant，通过这个命令行工具可以直接启动一个虚拟机，当然你需要提前定义一个Vagrantfile文件，这有点类似Dockerfile之于docker了。</p>
<p>跟docker类比这来看vagrant就比较好理解了，vagrant也是用来提供一致性环境的，vagrant本身也提供一个镜像源，使用vagrant init hashicorp&#x2F;precise64就可以初始化一个Ubuntu 12.04的镜像。</p>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>你可以下载安装文件来安装vagrant，也可以使用RubyGem安装，它是用Ruby开发的。</p>
<h4 id="Vagrantfile"><a href="#Vagrantfile" class="headerlink" title="Vagrantfile"></a>Vagrantfile</h4><p>Vagrantfile是用来定义vagrant project的，使用ruby语法，不过你不必了解ruby就可以写一个Vagrantfile。</p>
<p>看个例子，选自<a href="https://github.com/fenbox/Vagrantfile">https://github.com/fenbox/Vagrantfile</a><br><img src="https://s21.ax1x.com/2024/09/06/pAeS8Qf.png"><br><img src="https://s21.ax1x.com/2024/09/06/pAeS3SP.png"></p>
<h4 id="Boxes"><a href="#Boxes" class="headerlink" title="Boxes"></a>Boxes</h4><p>Vagrant的基础镜像，相当于docker images。可以在这些基础镜像的基础上制作自己的虚拟机镜像。</p>
<p>添加一个box</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant box add hashicorp/precise64</span></span><br></pre></td></tr></table></figure>
<p>在Vagrantfile中指定box</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Vagrant.configure(&quot;2&quot;) do |config|</span><br><span class="line">  config.vm.box = &quot;hashicorp/precise64&quot;</span><br><span class="line">  config.vm.box_version = &quot;1.1.0&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h4 id="使用ssh进入vagrant"><a href="#使用ssh进入vagrant" class="headerlink" title="使用ssh进入vagrant"></a>使用ssh进入vagrant</h4><p>vagrant up后就可以用vagrant ssh $name进入虚拟机内，如果主机上就一个vagrant可以不指定名字。默认进入的用户是vagrant。</p>
<h4 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h4><p>vagrant up后在虚拟机中会有一个&#x2F;vagrant目录，这跟你定义Vagrantfile是同一级目录。</p>
<p>这个目录跟你宿主机上的目录文件是同步的。</p>
<h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><p>在Vagrantfile中定义要安装的软件和操作。</p>
<p>例如安装apache</p>
<p>在与Vagrantfile同级的目录下创建一个bootstrap.sh文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y apache2</span><br><span class="line">if ! [ -L /var/www ]; then</span><br><span class="line">  rm -rf /var/www</span><br><span class="line">  ln -fs /vagrant /var/www</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>然后在Vagrantfile中使用它。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Vagrant.configure(&quot;2&quot;) do |config|</span><br><span class="line">  config.vm.box = &quot;hashicorp/precise64&quot;</span><br><span class="line">  config.vm.box_version = &quot;1.1.0&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h4 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h4><p>端口转发</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Vagrant.configure(&quot;2&quot;) do |config|</span><br><span class="line">  config.vm.box = &quot;hashicorp/precise64&quot;</span><br><span class="line">  config.vm.provision :shell, path: &quot;bootstrap.sh&quot;</span><br><span class="line">  config.vm.network :forwarded_port, guest: 80, host: 4567</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>执行vagrant reload或者vagrant up可以生效。</p>
<h4 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h4><p>你自己做的vagrant是可以分享给别人的用的，只要你有一个hashicorp账号，vagrant login后就可以执行vagrant share分享，会生成一个URL，其它人也可以访问到你的vagrant里的服务。</p>
<h4 id="中止"><a href="#中止" class="headerlink" title="中止"></a>中止</h4><p>vagrant suspend<br>Vagrant halt<br>Vagrant destroy<br>重构</p>
<p>再次执行vagrant up即可。</p>
<h3 id="分布式环境"><a href="#分布式环境" class="headerlink" title="分布式环境"></a>分布式环境</h3><p>开发分布式环境下的应用时往往需要多个虚拟机用于测试，这时候才是vagrant显威力的时候。</p>
<h4 id="定义多个主机"><a href="#定义多个主机" class="headerlink" title="定义多个主机"></a>定义多个主机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Vagrant.configure(&quot;2&quot;) do |config|</span><br><span class="line">  config.vm.provision &quot;shell&quot;, inline: &quot;echo Hello&quot;</span><br><span class="line"></span><br><span class="line">  config.vm.define &quot;web&quot; do |web|</span><br><span class="line">    web.vm.box = &quot;apache&quot;</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  config.vm.define &quot;db&quot; do |db|</span><br><span class="line">    db.vm.box = &quot;mysql&quot;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说说Vagrant没有Docker好用，但是对于协同开发，用它来定义分布式开发环境还可以，ruby的语法看着有点不习惯，好在也不复杂，如果是团队几个人开发，弄几个虚拟机大家互相拷贝一下也没那么复杂吧？</p>
<blockquote><p>本文摘自网络</p>
<footer><strong>jimmysong</strong><cite><a href="https://jimmysong.io/blog/vagrant-intro/">Vagrant从使用到放弃再到掌握完全指南</a></cite></footer></blockquote>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在Mac上安装Windows 11系统？这个方法完全免费又简单好用</title>
    <url>/53303.html</url>
    <content><![CDATA[<p><img src="https://c5a6b8d.webp.li/2024/11/mac-vmware-function-pro.png"></p>
<h1 id="VMware-Fusion-Pro"><a href="#VMware-Fusion-Pro" class="headerlink" title="VMware Fusion Pro"></a>VMware Fusion Pro</h1><p>下载并安装 VMware Fusion Pro ，这个软件已经正式免费提供给个人用户使用！</p>
<p>【**<a href="https://blogs.vmware.com/teamfusion/2024/05/fusion-pro-now-available-free-for-personal-use.html">官方下载</a>**】</p>
<p>官方需注册在管理中心进行下载【<a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">点击前往</a>】</p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1SAncVLCaa5iG8AWNIaM19w?pwd=i16i">https://pan.baidu.com/s/1SAncVLCaa5iG8AWNIaM19w?pwd=i16i</a>  提取码: i16i</p>
<p>夸克网盘：<a href="https://pan.quark.cn/s/fed867c006d4">https://pan.quark.cn/s/fed867c006d4</a></p>
<h1 id="Windows-11-ARM"><a href="#Windows-11-ARM" class="headerlink" title="Windows 11 ARM"></a>Windows 11 ARM</h1><p>下载 Windows 11 ARM 结构的最新系统安装包：</p>
<p>ED2K下载链接:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ed2k://|file|SW_DVD9_Win_Pro_11_23H2_Arm64_ChnSimp_Pro_Ent_EDU_N_MLF_X23-59518.ISO|7142125568|769949291524FDE82A0BB52138433F06|/</span><br></pre></td></tr></table></figure>

<p>BT下载链接:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">magnet:?xt=urn:btih:64fb7c011f407628471432d8cd52b2b5c6c52673&amp;dn=SW_DVD9_Win_Pro_11_23H2_Arm64_ChnSimp_Pro_Ent_EDU_N_MLF_X23-59518.ISO&amp;xl=7142125568</span><br></pre></td></tr></table></figure>
<p>你可以使用任何的种子下载工具进行下载，比如你可以使用【<a href="https://www.qbittorrent.org/download">qBittorrent</a>】来进行下载</p>
<h1 id="Windows-10-系统"><a href="#Windows-10-系统" class="headerlink" title="Windows 10 系统"></a>Windows 10 系统</h1><p>如果你需要在mac上安装 Windows 10 系统，那么安装步骤几乎是一样的，只需下载Windows 10 的ARM 最新安装包</p>
<p>BT种子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">magnet:?xt=urn:btih:1254374ee4000b9e8fed508fe2fdcdd8f49c2161&amp;dn=SW_DVD9_Win_Pro_10_22H2.3_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X23-36949.ISO&amp;xl=5333610496</span><br></pre></td></tr></table></figure>

<p>ED2K链接：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http://ed2k//|file|SW_DVD9_Win_Pro_10_22H2.3_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X23-36949.ISO|5333610496|401601D6C86121111B85019BAB8CD79D|/</span><br></pre></td></tr></table></figure>
<p>后面的安装步骤跟上面的一样！</p>
<h1 id="手动下载"><a href="#手动下载" class="headerlink" title="手动下载"></a>手动下载</h1><p><font color=red><strong>如果无法安装虚拟机tools，试试下载安装包手动安装看是否可行：</strong></font></p>
<p><a href="https://packages.vmware.com/tools/esx/latest/windows/x64/">https://packages.vmware.com/tools/esx/latest/windows/x64/</a></p>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Windows</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11恢复到win10的右键经典菜单</title>
    <url>/10322.html</url>
    <content><![CDATA[<p>如果您正在寻找在 Windows 11 中禁用或启用新上下文菜单而不是处理注册表项的<strong>一键式解决方案</strong>，您可以使用 Win 11 Classic Context Menu v 1.0 Portable freeware Application。它具有简约的界面使用第一个按钮“启用 Win 11 经典上下文菜单样式”按钮禁用 Windows 11 中右键单击菜单中的“显示更多选项”</p>
<p><strong>官网下载地址：<a href="https://www.sordum.org/14479/windows-11-classic-context-menu-v1-0/">https://www.sordum.org/14479/windows-11-classic-context-menu-v1-0/</a></strong></p>
<p><strong>小红书演示视频：</strong><a href="https://www.xiaohongshu.com/discovery/item/66fa28a4000000002c02d77c?source=webshare&xhsshare=pc_web&xsec_token=DBRZ1NQiKjBQuzErsBoFX4jKc7VFMWsKdKwBDIAbCm6Pg=&xsec_source=pc_share">【教你一键将Windows 11右键菜单改回经典样式 - 电脑教室 | 小红书 - 你的生活指南】</a></p>
<p><strong>如果你需要修改更多额外的功能，那么你可以接着往下看：</strong></p>
<p>如果您想从 Windows 11 上下文菜单中删除“显示更多选项”条目并恢复 Windows 11 中的经典右键单击菜单，您可以使用以下注册表项。</p>
<p><strong>通过注册表在 Windows 11 中恢复完整的右键单击上下文菜单</strong></p>
<p>Windows 注册表编辑器 5.00 版</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[HKEY_CURRENT_USER\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\InprocServer32]</span><br><span class="line">@=””</span><br></pre></td></tr></table></figure>
<p><strong>通过注册表获取默认的 Windows 11 上下文菜单</strong></p>
<p>Windows 注册表编辑器 5.00 版</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[-HKEY_CURRENT_USER\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;]</span><br></pre></td></tr></table></figure>
<p>应用上述注册表项后，您需要重新启动文件资源管理器以使设置生效。或者，您可以使用命令提示符来执行相同的任务。</p>
<p><strong>使用 Cmd 在 Windows 11 上恢复经典上下文菜单</strong></p>
<ol>
<li>以管理员权限打开 Cmd</li>
<li>复制并粘贴以下代码，然后按 Enter  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reg.exe 添加“HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\InprocServer32” /f </span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>使用 Cmd 在 Windows 11 上恢复默认上下文菜单</strong></p>
<ol>
<li>以管理员权限打开 Cmd</li>
<li>复制并粘贴以下代码，然后按 Enter  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reg.exe 删除“HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;” /f</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>注意：</strong>完成上述步骤后重新启动文件资源管理器。</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>经典菜单</tag>
      </tags>
  </entry>
  <entry>
    <title>查找您的 Windows 10 、11 激活密钥，以及（OEM 数字许可证密钥）</title>
    <url>/46926.html</url>
    <content><![CDATA[<p><strong>1、CMD命令终端下以管理员身份输入命令：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wmic path softwareLicensingService get OA3xOriginalProductKey</span><br></pre></td></tr></table></figure>
<p>如果你通过上方的命令运行后没有看到密钥，那是因为你用的是OEM数字许可证密钥，这种情况请使用下面的第2种方法来获取密钥。</p>
<p><strong>2、注册表下：</strong><br>计算机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform</span><br></pre></td></tr></table></figure>
<p>找到 BackupProductKeyDefault，在其后面就能找到你的激活密钥</p>
<p><strong>3、Windows10 &#x2F;11 KMS激活方式</strong></p>
<p>注意：以管理员身份运行CMD，然后依次输入下面的命令即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">slmgr /ipk 这里填写你的OEM密钥</span><br><span class="line"></span><br><span class="line">slmgr /skms kms.loli.best</span><br><span class="line"></span><br><span class="line">slmgr /ato</span><br><span class="line"></span><br><span class="line">slmgr /xpr</span><br></pre></td></tr></table></figure>

<p>OEM激活密钥可以去微软官方免费获取<a href="https://learn.microsoft.com/zh-cn/windows-server/get-started/kms-client-activation-keys?tabs=server2022,windows10ltsc,version1803,windows81">【点击前往】</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows key</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11 24H2正式发布！官方免费下载，并绕过硬件限制安装</title>
    <url>/45623.html</url>
    <content><![CDATA[<p>微软之前一直传闻会在本月发布 Windows 11 24H2，尽管有消息称发布日期可能是 10 月 8 日，但微软显然不想让大家猜中，今天便正式发布了该版本。24H2 带来了许多新改进，不过与 Copilot+ PC 相关的功能需要等到 11 月才能向符合硬件要求的 AMD 和 Intel 系统开放。目前，微软只提供了适用于 x64 硬件的 ISO 安装镜像，而 Arm64 版本预计将在未来几周内推出。</p>
<p><strong>小红书视频教程直达：</strong><a href="https://www.xiaohongshu.com/explore/67009dbc000000002c02f43e?app_platform=android&app_version=8.54.0&apptime=1728093637&share_from_user_hidden=true&type=video&appuid=6694a7ab0000000003033310&author_share=1&xsec_token=DBD6kwLo0uCxXSGSm_sUx7OyvkEI41em5H3wuU1MwxAxE=&xsec_source=app_share&xhsshare=WeixinSession&shareRedId=ODw7NEQ8RUs2NzUyOTgwNjY2OTo3ODc5&share_id=e88da52e865247b387f31f1c18bd9693">Windows11 24H2 正式发布！绕过硬件限制安装</a> </p>
<p><strong>Windows 11 24H2 官方下载链接：</strong><a href="https://www.microsoft.com/software-download/windows11">链接直达</a></p>
<p>【<a href="https://www.microsoft.com/en-us/microsoft-copilot/for-individuals/copilot-app?form=MY02FX&OCID=MY02FX">官方英文版</a>】</p>
<p>【<a href="https://www.microsoft.com/zh-cn/software-download/windows11">中文简体版</a>】</p>
<p>【<a href="https://www.microsoft.com/zh-tw/software-download/windows11">中文繁體版</a>】</p>
<h2 id="Windows-11-24H2-正式版新增的功能："><a href="#Windows-11-24H2-正式版新增的功能：" class="headerlink" title="Windows 11 24H2 正式版新增的功能："></a><strong>Windows 11 24H2 正式版新增的功能：</strong></h2><p>据微软表示，24H2 重点功能包括：</p>
<p>Copilot+ PC 专属功能：<br>即时辅助字幕。<br>小画家中的Cocreator。<br>Windows Studio 效果。<br>自动超解析度。<br>影像建立工具和Restyle 影像。<br>Wi-Fi 7 支援。<br>辅助听力装置支援的蓝牙LE 音讯增强功能。<br>系统匣&amp; 工作列增强功能。<br>更精简的档案总管。<br>智慧电源管理。<br>使用QR Code 加入及共用Wi-Fi 网路。<br>增强的Wi-Fi 网路存取隐私控制。<br>在Microsoft Teams 中轻松管理帐户和通知。<br>跨装置扩充Voice Clarity。<br>Windows 的Sudo：提升Windows 命令列效率。<br>远端桌面：增强的连线能力和辅助功能。</p>
<p>对于硬件不达标，无法在线升级的小伙伴，可以使用Rufus进行安装</p>
<p><strong>Rufus 官方下载</strong>【<a href="https://rufus.ie/zh/">点击前往</a>】<br><img src="https://c5a6b8d.webp.li/2024/10/rufus.png"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows11系统增强实用工具，系统瘦身优化神器</title>
    <url>/44455.html</url>
    <content><![CDATA[<h1 id="Windows-11-Debloater-Tool"><a href="#Windows-11-Debloater-Tool" class="headerlink" title="Windows 11 Debloater Tool"></a>Windows 11 Debloater Tool</h1><p>Windows 11 Debloater Tool 本身是一款开源的电脑优化脚本，它具有 <strong>可快速轻松地进行去臃肿处理，Advanced Debloater 可进行基本去臃肿处理，或</strong> <strong>Fine-Tuning 可从众多选项中选择所需的选项</strong>。首先从“Debloat Preset”中选择一个预设，以创建 <strong>终极 PowerShell 脚本来去臃肿 Microsoft Windows 11！</strong> 创建您自己的单选按钮预设并分享！您可以直接从程序运行脚本。</p>
<p><img src="https://c5a6b8d.webp.li/2025/03/Debloater.png"></p>
<p>1、Github 开源版：【**<a href="https://github.com/Raphire/Win11Debloat">点击前往</a>**】</p>
<p>2、Windows 11 Debloater Tool (可视化 UI 版) 【**<a href="https://freetimetech.com/W11D/Windows11DebloaterV206.zip">点击下载</a><strong>】</strong>推荐**</p>
<p>Win11Debloat 是一个简单、易用且轻量级的 PowerShell 脚本，可以删除预装的 Windows 臃肿软件应用程序、禁用遥测并通过禁用或删除侵入性界面元素、广告等来简化体验。无需亲自费力地完成所有设置或逐个删除应用程序。Win11Debloat 使该过程变得快速而简单！</p>
<p>该脚本还包含许多系统管理员会喜欢的功能。例如，支持 Windows 审核模式以及在运行时无需用户输入即可运行脚本的能力。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>提示</p>
<p>Win11Debloat 所做的所有更改都可以轻松恢复，并且几乎所有应用程序都可以通过 Microsoft Store 重新安装。有关如何恢复更改的完整指南可<a href="https://github.com/Raphire/Win11Debloat/discussions/114">在此处</a>找到。</p>
<h4 id="应用程序删除"><a href="#应用程序删除" class="headerlink" title="应用程序删除"></a>应用程序删除</h4><ul>
<li>删除各种过度膨胀的应用程序。</li>
<li>从当前用户或所有现有用户和新用户的开始菜单中删除所有固定的应用程序。（仅限 Windows 11）</li>
</ul>
<h4 id="遥测、跟踪和推荐内容"><a href="#遥测、跟踪和推荐内容" class="headerlink" title="遥测、跟踪和推荐内容"></a>遥测、跟踪和推荐内容</h4><ul>
<li>禁用遥测、诊断数据、活动历史记录、应用程序启动跟踪和定向广告。</li>
<li>在开始、设置、通知、文件资源管理器和锁屏上禁用提示、技巧、建议和广告。</li>
<li>禁用“Windows Spotlight”桌面背景选项。</li>
</ul>
<h4 id="Bing-网页搜索、Copilot-等"><a href="#Bing-网页搜索、Copilot-等" class="headerlink" title="Bing 网页搜索、Copilot 等"></a>Bing 网页搜索、Copilot 等</h4><ul>
<li>从 Windows 搜索中禁用并删除 Bing 网络搜索和 Cortana。</li>
<li>禁用并删除 Windows Copilot。（仅限 W11）</li>
<li>禁用 Windows Recall 快照。（仅限 W11）</li>
</ul>
<h4 id="文件资源管理器"><a href="#文件资源管理器" class="headerlink" title="文件资源管理器"></a>文件资源管理器</h4><ul>
<li>更改文件资源管理器打开的默认位置。</li>
<li>显示隐藏的文件、文件夹和驱动器。</li>
<li>显示已知文件类型的文件扩展名。</li>
<li>从文件资源管理器导航窗格中隐藏主页或图库部分。（仅限 W11）</li>
<li>从文件资源管理器导航窗格中隐藏 3D 对象、音乐或 OneDrive 文件夹。（仅限 W10）</li>
<li>从文件资源管理器导航窗格中隐藏重复的可移动驱动器条目，因此只保留“此电脑”下的条目。</li>
</ul>
<h4 id="任务栏和开始"><a href="#任务栏和开始" class="headerlink" title="任务栏和开始"></a>任务栏和开始</h4><ul>
<li>将任务栏图标左对齐。（仅限 W11）</li>
<li>隐藏或更改任务栏上的搜索图标&#x2F;框。（仅限 W11）</li>
<li>隐藏任务栏中的任务视图按钮。（仅限 W11）</li>
<li>禁用小部件服务并隐藏任务栏中的图标。</li>
<li>隐藏任务栏中的聊天（立即开会）图标。</li>
<li>禁用并隐藏开始菜单中的推荐部分。（仅限 W11）</li>
</ul>
<h4 id="上下文菜单"><a href="#上下文菜单" class="headerlink" title="上下文菜单"></a>上下文菜单</h4><ul>
<li>恢复旧的 Windows 10 样式上下文菜单。（仅限 W11）</li>
<li>从上下文菜单中隐藏“包含在库中”、“授予访问权限”和“共享”选项。（仅限 W10）</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li>禁用 Xbox 游戏&#x2F;屏幕录制，这也会停止游戏覆盖弹出窗口。</li>
<li>关闭“增强指针精度”（也称为鼠标加速）。</li>
<li>Sysprep 模式将更改应用于 Windows 默认用户配置文件。之后，所有新用户都将自动应用更改。</li>
</ul>
<h2 id="默认设置"><a href="#默认设置" class="headerlink" title="默认设置"></a>默认设置</h2><p>该脚本允许您精确选择要进行的更改，但它还提供了一键式默认模式。默认模式允许您快速轻松地应用建议大多数用户使用的更改。展开下面的部分以了解更多信息。</p>
<h2 id="快速方法"><a href="#快速方法" class="headerlink" title="快速方法"></a>快速方法</h2><p>通过 PowerShell 自动下载并运行脚本。<code>%temp%/Win11Debloat</code>如果您想检查与脚本相关的所有文件，它们都会被保存。脚本在执行后会自动清理文件。</p>
<ol>
<li><p>打开 PowerShell，最好以管理员身份打开。</p>
</li>
<li><p>将以下代码复制并粘贴到 PowerShell 中，按 Enter 运行脚本：</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp; ([scriptblock]::Create((irm &quot;https://debloat.raphi.re/&quot;)))</span><br></pre></td></tr></table></figure>
<ol>
<li><p>等待脚本自动下载 Win11Debloat。</p>
</li>
<li><p>将打开一个新的 PowerShell 窗口，其中显示 Win11Debloat 菜单。选择默认或自定义模式以继续。</p>
</li>
<li><p>仔细阅读并按照屏幕上的说明进行操作。</p>
<h3 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h3><p>手动下载并运行脚本。</p>
<ol>
<li><a href="https://github.com/Raphire/Win11Debloat/archive/master.zip">下载最新版本的脚本</a>，并将.ZIP 文件解压到所需位置。</li>
<li>导航到 Win11Debloat 文件夹</li>
<li>双击<code>Run.bat</code>文件启动脚本。注意：如果控制台窗口立即关闭且没有任何反应，请尝试下面的高级方法。</li>
<li>接受 Windows UAC 提示以管理员身份运行脚本，这是脚本运行所必需的。</li>
<li>现在将打开一个新的 PowerShell 窗口，显示 Win11Debloat 菜单。选择默认或自定义模式继续。</li>
<li>仔细阅读并按照屏幕上的说明进行操作。</li>
</ol>
</li>
</ol>
<h1 id="Winhance"><a href="#Winhance" class="headerlink" title="Winhance"></a>Winhance</h1><p><img src="https://c5a6b8d.webp.li/2025/03/hance.png"></p>
<h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul>
<li>Windows 11<ul>
<li><em>在 Windows 11 24H2 上测试</em></li>
<li><em>大多数功能都可以在 Windows 10 22H2 上运行，但也存在一些问题，例如 Microsoft Edge（旧版）删除</em></li>
</ul>
</li>
<li>Windows PowerShell 5.1（以上版本已预装）</li>
</ul>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>要使用<strong>Winhance</strong>，请按照以下步骤以管理员身份启动 PowerShell 并运行安装脚本：</p>
<ol>
<li><p><strong>以管理员身份打开 PowerShell：</strong></p>
<ul>
<li><strong>Windows 10&#x2F;11</strong>：右键单击<strong>“开始”</strong>按钮并选择<strong>“Windows PowerShell（管理员）”</strong>或<strong>“Windows 终端（管理员）”</strong></li>
<li>PowerShell 将在新窗口中打开。</li>
</ul>
</li>
<li><p><strong>确认管理员权限</strong>：</p>
<ul>
<li>如果用户帐户控制 (UAC) 提示，请单击<strong>“是”</strong>以允许 PowerShell 以管理员身份运行。</li>
</ul>
</li>
<li><p><strong>启用 PowerShell 脚本执行：</strong></p>
<ul>
<li><p>运行以下命令以允许脚本执行：</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Set-ExecutionPolicy Unrestricted</span><br></pre></td></tr></table></figure>

<p> <strong>粘贴并运行命令</strong>：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">irm &quot;https://github.com/memstechtips/Winhance/raw/main/Winhance.ps1&quot; | iex</span><br></pre></td></tr></table></figure>
<ul>
<li>要粘贴到 PowerShell，请在 PowerShell 或终端窗口中<strong>单击鼠标右键</strong>或按<strong>Ctrl + V</strong></li>
<li>按<strong>Enter</strong>执行命令</li>
</ul>
<p>此命令将直接从 GitHub下载并执行<strong>Winhance应用程序。</strong></p>
</li>
</ul>
</li>
</ol>
<h2 id="当前功能"><a href="#当前功能" class="headerlink" title="当前功能"></a>当前功能</h2><h3 id="软件和应用程序"><a href="#软件和应用程序" class="headerlink" title="软件和应用程序"></a>软件和应用程序</h3><ul>
<li>安装软件</li>
<li>删除 Windows 应用程序（永久）<ul>
<li>微软Edge</li>
<li>OneDrive</li>
<li>记起</li>
<li>副驾驶</li>
<li>其他无用的 Windows 过度软件</li>
</ul>
</li>
</ul>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul>
<li>设置 UAC 通知级别</li>
<li>禁用或启用 Windows 安全套件</li>
<li>隐私设置</li>
<li>游戏优化</li>
<li>Windows 更新</li>
<li>电源设置</li>
<li>计划任务</li>
<li>Windows 服务</li>
</ul>
<h3 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h3><ul>
<li>切换 Windows 暗模式或亮模式</li>
<li>任务栏自定义</li>
<li>开始菜单设置</li>
<li>资源管理器选项</li>
<li>通知偏好</li>
<li>声音设置</li>
<li>辅助功能选项</li>
<li>搜索配置</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 LTSC 2024 官方精简版！简体中文正式版ISO镜像下载</title>
    <url>/15723.html</url>
    <content><![CDATA[<p><strong>Win11企业版 2024 长期服务版 (Windows 11 IoT Enterprise LTSC 2024)</strong> 提供长达 10 年的支持服务，支持至 2034 年。<br>它可视为官方推出的精简版 Win11，系统稳定流畅，对电脑硬件的要求较低，适合性能有限的设备。用户可以通过数字权利实现永久激活。<br>LTSC 版本去除了应用商店、微软小娜（Cortana）、OneDrive，并且 Windows 更新提供了更多高级设置，用户可选择性安装系统更新，极大提升了系统的可控性和定制化。</p>
<p>Microsoft Windows 11 Enterprise LTSC 2024 官方简体中文正式版ISO镜像下载地址</p>
<p>zh-cn_windows_11_enterprise_ltsc_2024_x64_dvd_cff9cd2d.iso（4.92G）SHA: 2CB21649590C8CF770CD93556596DFF4FD800F24D267A9BE9D9CE0EE9E03F5AC</p>
<p>【<a href="https://drive.massgrave.dev/zh-cn_windows_11_enterprise_ltsc_2024_x64_dvd_cff9cd2d.iso"><strong>点击下载</strong></a>】或 【<a href="magnet:?xt=urn:btih:b84e74c1dbcc88a02c5b24a6f84383f353a2e1dd&dn=zh-cn_windows_11_enterprise_ltsc_2024_x64_dvd_cff9cd2d.iso&xl=5287520256"><strong>BT磁力下载</strong></a>】</p>
<p>Microsoft Windows 11 Enterprise LTSC 2024 英文版官方下载 【<a href="magnet:?xt=urn:btih:7352bd2db48c3381dffa783763dc75aa4a6f1cff&dn=en-us_windows_11_iot_enterprise_ltsc_2024_x64_dvd_f6b14814.iso&xl=5144817664"><strong>点击下载</strong></a>】</p>
<p><strong>Windows 11 IoT Enterprise LTSC 2024 物联</strong>英文版官方下载</p>
<p>【<a href="https://www.microsoft.com/en-us/evalcenter/download-windows-11-iot-enterprise-ltsc-eval"><strong>点击前往</strong></a>】 </p>
<table>
<thead>
<tr>
<th align="left">English (United States)</th>
<th><strong>ISO – Windows 11 IoT Enterprise LTSC 2024 Evaluation</strong><a href="https://go.microsoft.com/fwlink/?linkid=2270353&clcid=0x409&culture=en-us&country=us">x64 or AMD64 edition</a></th>
</tr>
</thead>
<tbody><tr>
<td align="left">English (United States)</td>
<td><strong>ISO – Windows 11 IoT Enterprise LTSC 2024 Evaluation</strong><a href="https://go.microsoft.com/fwlink/?linkid=2269595&clcid=0x409&culture=en-us&country=us">ARM64 edition</a></td>
</tr>
</tbody></table>
<h2 id="制作U盘系统安装盘："><a href="#制作U盘系统安装盘：" class="headerlink" title="制作U盘系统安装盘："></a>制作U盘系统安装盘：</h2><p>1、Rufus 【<a href="https://rufus.ie/zh/">官方下载</a>】</p>
<p>2、Ventoy 【<a href="https://www.ventoy.net/cn/download.html">官方下载</a>】</p>
<h3 id="Windows-11-2024-LTSC-长期服务版-KMS-官方密钥获取："><a href="#Windows-11-2024-LTSC-长期服务版-KMS-官方密钥获取：" class="headerlink" title="Windows 11 2024 LTSC 长期服务版 KMS 官方密钥获取："></a>Windows 11 2024 LTSC 长期服务版 KMS 官方密钥获取：</h3><p>【<a href="https://learn.microsoft.com/en-us/windows-server/get-started/kms-client-activation-keys?tabs=server2025,windows1110ltsc,version1803,windows81"><strong>点击前往</strong></a>】</p>
<p>激活命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">slmgr -ipk 这里填写视频里演示的密钥</span><br><span class="line"></span><br><span class="line">slmgr -skms kms.03k.org </span><br><span class="line"></span><br><span class="line">slmgr -ato </span><br><span class="line"></span><br><span class="line">slmgr -dlv</span><br></pre></td></tr></table></figure>

<p><strong>安装后可以进一步精简系统,使用DISM快速禁用或启用保留空间：</strong></p>
<p># 禁用系统保留空间 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DISM.exe /Online /Set-ReservedStorageState /State:Disabled</span><br></pre></td></tr></table></figure>

<p><img src="https://c5a6b8d.webp.li/2024/10/disabled-reservedStorageState.png" alt="disabled-reservedStorageState"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 微软 Recall 召回功能有重大安全隐患！如何检测并禁用？</title>
    <url>/9528.html</url>
    <content><![CDATA[<p>最新版本的Windows 11系统中，微软默认启用了备受争议的Recall功能。这一功能通过定期截取用户屏幕并进行分析，旨在帮助用户快速检索过去操作的信息。然而，其潜在的安全和隐私风险引发了广泛关注。</p>
<h3 id="Recall功能为何引发担忧？"><a href="#Recall功能为何引发担忧？" class="headerlink" title="Recall功能为何引发担忧？"></a><strong>Recall功能为何引发担忧？</strong></h3><ul>
<li><strong>隐私泄露风险：</strong> Recall功能可能无意中截取包含敏感信息的屏幕截图，例如密码、银行账户信息等，这些信息一旦泄露，将对用户造成严重损失。</li>
<li><strong>数据滥用隐患：</strong> 虽然微软声称会对数据进行加密和匿名化处理，但仍无法完全排除数据被滥用的可能性。</li>
<li><strong>系统性能影响：</strong> 不断的屏幕截图和数据分析可能占用大量系统资源，影响电脑运行速度。</li>
</ul>
<p><strong>检测是否开启：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Dism /Online /Get-Featureinfo /Featurename:Recall</span><br></pre></td></tr></table></figure>

<p><strong>关闭 Recall功能：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Dism /Online /Disable-Feature /Featurename:Recall</span><br></pre></td></tr></table></figure>

<p><strong>开启Recall功能：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Dism /Online /Enable-Feature /Featurename:Recall</span><br></pre></td></tr></table></figure>

<p>只需在CMD终端下，以管理员身份运行以上命令即可！</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Recall</tag>
      </tags>
  </entry>
  <entry>
    <title>wrk</title>
    <url>/21973.html</url>
    <content><![CDATA[<p>被面试官经常问到之前开发的系统接口 QPS 能达到多少，经常给不出一个数值，支支吾吾，导致整体面试效果降低？<br>原因基本是一些公司中，做完功能测试就完了，压根不会有性能测试这一步，或者说并发量较少，没有必要进行性能测试，亦或者，交给测试人员后，只要整体问题不大，测试报告一般也是不会再给后端人员看的，这就导致我们在面试的时候，场面一度尴尬 ！！！</p>
<p>其实，不单单是针对面试，作为一名后端开发者，我们在完成一个接口开发后，在交给测试工程师之前，经常也会想知道，自己写的这个接口的性能如何呢？吞吐量能达到多少？QPS（Query per second 每秒处理完的请求数） 能达到多少呢？<br>这个时候，我们就需要借助一些常用的性能测试工具，如 Apache ab, Apache JMeter (互联网公司用的较多)，LoadRunner 等。<br>我们今天主要说一说轻量级性能测试工具 wrk。</p>
<h1 id="什么是wrk"><a href="#什么是wrk" class="headerlink" title="什么是wrk"></a>什么是wrk</h1><p>摘自官方 GitHub 上的英文介绍：</p>
<blockquote><p>wrk - a HTTP benchmarking tool<br>wrk is a modern HTTP benchmarking tool capable of generating significant load when run on a single multi-core CPU. It combines a multithreaded design with scalable event notification systems such as epoll and kqueue.</p>
<p>An optional LuaJIT script can perform HTTP request generation, response processing, and custom reporting. Details are available in SCRIPTING and several examples are located in scripts.</p>
</blockquote>
<p><strong>简单的说：</strong><br>wrk 是一款针对 Http 协议的基准测试工具，它能够在单机多核 CPU 的条件下，使用系统自带的高性能 I&#x2F;O 机制，如 epoll，kqueue 等，通过多线程和事件模式，对目标机器产生大量的负载。</p>
<h1 id="wrk安装"><a href="#wrk安装" class="headerlink" title="wrk安装"></a>wrk安装</h1><p>wrk 只能被安装在类 Unix 系统上，所以我们需要一个 Linux 或者 MacOS 环境。Windows 10 安装需要开启自带的 Ubuntu 子系统。</p>
<h4 id="2-1-Linux-安装"><a href="#2-1-Linux-安装" class="headerlink" title="2.1 Linux 安装"></a>2.1 Linux 安装</h4><p><strong>2.1.1 Ubuntu&#x2F;Debian</strong><br>依次执行如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential libssl-dev git -y</span><br><span class="line">git clone https://github.com/wg/wrk.git wrk</span><br><span class="line">cd wrk</span><br><span class="line">make</span><br><span class="line">将可执行文件移动到 /usr/local/bin 位置</span><br><span class="line">sudo cp wrk /usr/local/bin</span><br></pre></td></tr></table></figure>
<p><strong>2.2.2 CentOS &#x2F; RedHat &#x2F; Fedora</strong><br>依次执行如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum groupinstall &#x27;Development Tools&#x27;</span><br><span class="line">sudo yum install -y openssl-devel git </span><br><span class="line">git clone https://github.com/wg/wrk.git wrk</span><br><span class="line">cd wrk</span><br><span class="line">make</span><br><span class="line">-- 将可执行文件移动到 /usr/local/bin 位置</span><br><span class="line">sudo cp wrk /usr/local/bin</span><br></pre></td></tr></table></figure>

<h4 id="2-2-MacOS-安装"><a href="#2-2-MacOS-安装" class="headerlink" title="2.2 MacOS 安装"></a>2.2 MacOS 安装</h4><p>Mac 系统也可以通过先编译的方式来安装，但是更推荐使用 brew 的方式来安装, 步骤如下：</p>
<p>安装 Homebrew，安装方式参考官网 <a href="https://brew.sh/">https://brew.sh</a> （也就一行命令的事）;<br>安装 wrk: brew install wrk;</p>
<h4 id="2-3-Window-10-安装"><a href="#2-3-Window-10-安装" class="headerlink" title="2.3 Window 10 安装"></a>2.3 Window 10 安装</h4><p>Windown 10 需要在 Windows 功能 里勾选 适用于 Linux 的 Windows 子系统, 然后通过 bash 命令切换到 Ubuntu 子系统。接下来，参考 3.1.1 Ubuntu 的操作系通中，安装 wrk 的步骤。</p>
<p>由于笔者使用的是 MacOS, Windows 上的安装步骤，并没有实际操作过，具体安装步骤，您可以参考官方 Windows 10 的安装教程：<a href="https://github.com/wg/wrk/wiki/Installing-wrk-on-Windows-10">https://github.com/wg/wrk/wiki/Installing-wrk-on-Windows-10</a> ，或者用您喜欢的搜索引擎来搜索 Windows 10 如何启用 Ubuntu 子系统后，再安装 wrk，亦或者通过安装 Linux 虚拟机的方式来使用 wrk。</p>
<h4 id="2-4-验证一下，是否安装成功"><a href="#2-4-验证一下，是否安装成功" class="headerlink" title="2.4 验证一下，是否安装成功"></a>2.4 验证一下，是否安装成功</h4><p>命令行中输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wrk -v</span><br><span class="line">wrk  [kqueue] Copyright (C) 2012 Will Glozer</span><br><span class="line">Usage: wrk &lt;options&gt; &lt;url&gt;</span><br><span class="line">  Options:</span><br><span class="line">    -c, --connections &lt;N&gt;  Connections to keep open</span><br><span class="line">    -d, --duration    &lt;T&gt;  Duration of test</span><br><span class="line">    -t, --threads     &lt;N&gt;  Number of threads to use</span><br><span class="line"></span><br><span class="line">    -s, --script      &lt;S&gt;  Load Lua script file</span><br><span class="line">    -H, --header      &lt;H&gt;  Add header to request</span><br><span class="line">        --latency          Print latency statistics</span><br><span class="line">        --timeout     &lt;T&gt;  Socket/request timeout</span><br><span class="line">    -v, --version          Print version details</span><br><span class="line">  Numeric arguments may include a SI unit (1k, 1M, 1G)</span><br><span class="line">  Time arguments may include a time unit (2s, 2m, 2h)</span><br></pre></td></tr></table></figure>
<p>输出如上信息，说明安装成功了！</p>
<h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wrk -t12 -c400 -d30s http://localhost:4000</span><br></pre></td></tr></table></figure>
<blockquote><p>这条命令表示，利用 wrk发起压力测试，线程数为 12，模拟 400 个并发请求，持续 30 秒。</p>
</blockquote>

<h3 id="wrk-子命令参数说明"><a href="#wrk-子命令参数说明" class="headerlink" title="wrk 子命令参数说明"></a>wrk 子命令参数说明</h3><p>除了上面简单示例中使用到的子命令参数，wrk 还有其他更丰富的功能，命令行中输入 wrk –help, 可以看到支持以下子命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> wrk --help</span><br><span class="line">Usage: wrk &lt;options&gt; &lt;url&gt;                            </span><br><span class="line">  Options:                                            </span><br><span class="line">    -c, --connections &lt;N&gt;  Connections to keep open   </span><br><span class="line">    -d, --duration    &lt;T&gt;  Duration of test           </span><br><span class="line">    -t, --threads     &lt;N&gt;  Number of threads to use   </span><br><span class="line">                                                      </span><br><span class="line"></span><br><span class="line">    -s, --script      &lt;S&gt;  Load Lua script file       </span><br><span class="line">    -H, --header      &lt;H&gt;  Add header to request      </span><br><span class="line">        --latency          Print latency statistics   </span><br><span class="line">        --timeout     &lt;T&gt;  Socket/request timeout     </span><br><span class="line">    -v, --version          Print version details      </span><br><span class="line"></span><br><span class="line">Numeric arguments may include a SI unit (1k, 1M, 1G)</span><br><span class="line">Time arguments may include a time unit (2s, 2m, 2h)</span><br></pre></td></tr></table></figure>
<p>翻译一下：</p>
<blockquote><p>使用方法: wrk &lt;选项&gt; &lt;被测HTTP服务的URL&gt;<br>  Options:<br>    -c, –connections <N>  跟服务器建立并保持的TCP连接数量<br>    -d, –duration    <T>  压测时间<br>    -t, –threads     <N>  使用多少个线程进行压测   </p>
<pre><code>-s, --script      &lt;S&gt;  指定Lua脚本路径       
-H, --header      &lt;H&gt;  为每一个HTTP请求添加HTTP头      
    --latency          在压测结束后，打印延迟统计信息   
    --timeout     &lt;T&gt;  超时时间     
-v, --version          打印正在使用的wrk的详细版本信息
</code></pre>
<p>  <N>代表数字参数，支持国际单位 (1k, 1M, 1G)<br>  <T>代表时间参数，支持时间单位 (2s, 2m, 2h)</p>
</blockquote>
<p>关于线程数，并不是设置的越大，压测效果越好，线程设置过大，反而会导致线程切换过于频繁，效果降低，一般来说，推荐设置成压测机器 CPU 核心数的 2 倍到 4 倍就行了。</p>
<h3 id="测试报告"><a href="#测试报告" class="headerlink" title="测试报告"></a>测试报告</h3><p>执行压测命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wrk -t12 -c400 -d30s --latency http://www.baidu.com</span><br></pre></td></tr></table></figure>
<p>执行上面的压测命令，30 秒压测过后，生成如下压测报告：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Running 30s test @ http://www.baidu.com </span><br><span class="line">  12 threads and 400 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency   386.32ms  380.75ms   2.00s    86.66%</span><br><span class="line">    Req/Sec    17.06     13.91   252.00     87.89%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%  218.31ms</span><br><span class="line">     75%  520.60ms</span><br><span class="line">     90%  955.08ms</span><br><span class="line">     99%    1.93s </span><br><span class="line">  4922 requests in 30.06s, 73.86MB read</span><br><span class="line">  Socket errors: connect 0, read 0, write 0, timeout 311</span><br><span class="line">Requests/sec:    163.76</span><br><span class="line">Transfer/sec:      2.46MB</span><br></pre></td></tr></table></figure>
<p>我们来具体说一说，报告中各项指标都代表什么意思：</p>
<blockquote><p>Running 30s test @ <a href="http://www.baidu.com/">http://www.baidu.com</a> （压测时间30s）<br>  12 threads and 400 connections （共12个测试线程，400个连接）<br>              （平均值） （标准差）  （最大值）（正负一个标准差所占比例）<br>  Thread Stats   Avg      Stdev     Max   +&#x2F;- Stdev<br>    （延迟）<br>    Latency   386.32ms  380.75ms   2.00s    86.66%<br>    (每秒请求数)<br>    Req&#x2F;Sec    17.06     13.91   252.00     87.89%<br>  Latency Distribution （延迟分布）<br>     50%  218.31ms<br>     75%  520.60ms<br>     90%  955.08ms<br>     99%    1.93s<br>  4922 requests in 30.06s, 73.86MB read (30.06s内处理了4922个请求，耗费流量73.86MB)<br>  Socket errors: connect 0, read 0, write 0, timeout 311 (发生错误数)<br>Requests&#x2F;sec:    163.76 (QPS 163.76,即平均每秒处理请求数为163.76)<br>Transfer&#x2F;sec:      2.46MB (平均每秒流量2.46MB)</p>
</blockquote>
<p>可以看到，压测报告还是非常直观的！</p>
<blockquote><p>标准差啥意思？标准差如果太大说明样本本身离散程度比较高，有可能系统性能波动较大。</p>
</blockquote>

<h2 id="复杂测试"><a href="#复杂测试" class="headerlink" title="复杂测试"></a>复杂测试</h2><p>您可能有疑问了，你这种进行 GET 请求还凑合，我想进行 POST 请求咋办？而且我想每次的请求参数都不一样，用来模拟用户使用的实际场景，又要怎么弄呢？</p>
<p>对于这种需求，我们可以通过编写 Lua 脚本的方式，在运行压测命令时，通过参数 –script 来指定 Lua 脚本，来满足个性化需求。</p>
<h3 id="wrk-对-Lua-脚本的支持"><a href="#wrk-对-Lua-脚本的支持" class="headerlink" title="wrk 对 Lua 脚本的支持"></a>wrk 对 Lua 脚本的支持</h3><p>wrk 支持在三个阶段对压测进行个性化，分别是启动阶段、运行阶段和结束阶段。每个测试线程，都拥有独立的Lua 运行环境。</p>
<p><strong>启动阶段:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function setup(thread)</span><br></pre></td></tr></table></figure>
<p>在脚本文件中实现 setup 方法，wrk 就会在测试线程已经初始化，但还没有启动的时候调用该方法。wrk会为每一个测试线程调用一次 setup 方法，并传入代表测试线程的对象 thread 作为参数。setup 方法中可操作该 thread 对象，获取信息、存储信息、甚至关闭该线程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">thread.addr             - get or set the thread&#x27;s server address</span><br><span class="line">thread:get(name)        - get the value of a global in the thread&#x27;s env</span><br><span class="line">thread:set(name, value) - set the value of a global in the thread&#x27;s env</span><br><span class="line">thread:stop()           - stop the thread</span><br></pre></td></tr></table></figure>
<p><strong>运行阶段：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function init(args)</span><br><span class="line">function delay()</span><br><span class="line">function request()</span><br><span class="line">function response(status, headers, body)</span><br></pre></td></tr></table></figure>

<ul>
<li>init(args): 由测试线程调用，只会在进入运行阶段时，调用一次。支持从启动 wrk 的命令中，获取命令行参数；</li>
<li>delay()： 在每次发送请求之前调用，如果需要定制延迟时间，可以在这个方法中设置；</li>
<li>request(): 用来生成请求, 每一次请求都会调用该方法，所以注意不要在该方法中做耗时的操作；</li>
<li>response(status, headers, body): 在每次收到一个响应时被调用，为提升性能，如果没有定义该方法，那么wrk不会解析 headers 和 body；</li>
</ul>
<p><strong>结束阶段：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function done(summary, latency, requests)</span><br></pre></td></tr></table></figure>
<p>done() 方法在整个测试过程中只会被调用一次，我们可以从给定的参数中，获取压测结果，生成定制化的测试报告。</p>
<p><strong>自定义 Lua 脚本中可访问的变量以及方法：</strong></p>
<p>变量：wrk</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wrk = &#123;</span><br><span class="line">    scheme  = &quot;http&quot;,</span><br><span class="line">    host    = &quot;localhost&quot;,</span><br><span class="line">    port    = 8080,</span><br><span class="line">    method  = &quot;GET&quot;,</span><br><span class="line">    path    = &quot;/&quot;,</span><br><span class="line">    headers = &#123;&#125;,</span><br><span class="line">    body    = nil,</span><br><span class="line">    thread  = &lt;userdata&gt;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>以上定义了一个 table 类型的全局变量，修改该 wrk 变量，会影响所有请求。<br>方法：</p>
<ul>
<li><p>wrk.fomat</p>
</li>
<li><p>wrk.lookup</p>
</li>
<li><p>wrk.connect</p>
</li>
</ul>
<p>上面三个方法解释如下：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wrk.format</span><span class="params">(method, path, headers, body)</span></span></span><br><span class="line"></span><br><span class="line">    wrk.<span class="built_in">format</span> returns a HTTP request <span class="built_in">string</span> containing the passed parameters</span><br><span class="line">    merged with values from the wrk <span class="built_in">table</span>.</span><br><span class="line">      </span><br><span class="line">    <span class="comment">-- 根据参数和全局变量 wrk，生成一个 HTTP rquest 字符串。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wrk.lookup</span><span class="params">(host, service)</span></span></span><br><span class="line"></span><br><span class="line">    wrk.lookup returns a <span class="built_in">table</span> containing all known addresses <span class="keyword">for</span> the host</span><br><span class="line">    <span class="keyword">and</span> service pair. This corresponds to the POSIX getaddrinfo() function.</span><br><span class="line">    <span class="comment">-- 给定 host 和 service（port/well known service name），返回所有可用的服务器地址信息。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wrk.connect</span><span class="params">(addr)</span></span></span><br><span class="line"></span><br><span class="line">    wrk.connect returns <span class="literal">true</span> <span class="keyword">if</span> the address can be connected to, otherwise</span><br><span class="line">    it returns <span class="literal">false</span>. The address must be one returned from wrk.lookup().</span><br><span class="line">    <span class="comment">-- 测试给定的服务器地址信息是否可以成功创建连接</span></span><br></pre></td></tr></table></figure>

<h3 id="通过-Lua-脚本压测示例"><a href="#通过-Lua-脚本压测示例" class="headerlink" title="通过 Lua 脚本压测示例"></a>通过 Lua 脚本压测示例</h3><p><strong>调用 POST 接口：</strong></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">wrk.method = <span class="string">&quot;POST&quot;</span></span><br><span class="line">wrk.body   = <span class="string">&quot;foo=bar&amp;baz=quux&quot;</span></span><br><span class="line">wrk.headers[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br></pre></td></tr></table></figure>
<p>注意: wrk 是个全局变量，这里对其做了修改，使得所有请求都使用 POST 的方式，并指定了 body 和 Content-Type头。</p>
<p><strong>自定义每次请求的参数：</strong></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">request = <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">   uid = <span class="built_in">math</span>.<span class="built_in">random</span>(<span class="number">1</span>, <span class="number">10000000</span>)</span><br><span class="line">   <span class="built_in">path</span> = <span class="string">&quot;/test?uid=&quot;</span> .. uid</span><br><span class="line">   <span class="keyword">return</span> wrk.<span class="built_in">format</span>(<span class="literal">nil</span>, <span class="built_in">path</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>在 request 方法中，随机生成 1~10000000 之间的 uid，并动态生成请求 URL.</p>
<p><strong>每次请求前，延迟 10ms:</strong></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>请求的接口需要先进行认证，获取 token 后，才能发起请求，咋办？</strong></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">token = <span class="literal">nil</span></span><br><span class="line"><span class="built_in">path</span>  = <span class="string">&quot;/auth&quot;</span></span><br><span class="line"></span><br><span class="line">request = <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">   <span class="keyword">return</span> wrk.<span class="built_in">format</span>(<span class="string">&quot;GET&quot;</span>, <span class="built_in">path</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">response = <span class="function"><span class="keyword">function</span><span class="params">(status, headers, body)</span></span></span><br><span class="line">   <span class="keyword">if</span> <span class="keyword">not</span> token <span class="keyword">and</span> <span class="built_in">status</span> == <span class="number">200</span> <span class="keyword">then</span></span><br><span class="line">      token = headers[<span class="string">&quot;X-Token&quot;</span>]</span><br><span class="line">      <span class="built_in">path</span>  = <span class="string">&quot;/test&quot;</span></span><br><span class="line">      wrk.headers[<span class="string">&quot;X-Token&quot;</span>] = token</span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>上面的脚本表示，在 token 为空的情况下，先请求 &#x2F;auth 接口来认证，获取 token, 拿到 token 以后，将 token 放置到请求头中，再请求真正需要压测的 &#x2F;test 接口。</p>
<p><strong>压测支持 HTTP pipeline 的服务：</strong></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">init = <span class="function"><span class="keyword">function</span><span class="params">(args)</span></span></span><br><span class="line">   <span class="keyword">local</span> r = &#123;&#125;</span><br><span class="line">   r[<span class="number">1</span>] = wrk.<span class="built_in">format</span>(<span class="literal">nil</span>, <span class="string">&quot;/?foo&quot;</span>)</span><br><span class="line">   r[<span class="number">2</span>] = wrk.<span class="built_in">format</span>(<span class="literal">nil</span>, <span class="string">&quot;/?bar&quot;</span>)</span><br><span class="line">   r[<span class="number">3</span>] = wrk.<span class="built_in">format</span>(<span class="literal">nil</span>, <span class="string">&quot;/?baz&quot;</span>)</span><br><span class="line"></span><br><span class="line">   req = <span class="built_in">table</span>.<span class="built_in">concat</span>(r)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">request = <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">   <span class="keyword">return</span> req</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>通过在 init 方法中将三个 HTTP请求拼接在一起，实现每次发送三个请求，以使用 HTTP pipeline。</p>
<blockquote><p>本文摘自网络</p>
<footer><strong>小哈学Java</strong><cite><a href="https://www.cnblogs.com/quanxiaoha/p/10661650.html">性能测试工具wrk使用教程</a></cite></footer></blockquote>]]></content>
      <categories>
        <category>Linux</category>
        <category>软件推荐</category>
      </categories>
      <tags>
        <tag>wrk</tag>
      </tags>
  </entry>
  <entry>
    <title>几组拉伸动作没事可以练练</title>
    <url>/33831.html</url>
    <content><![CDATA[<p><strong>拉伸动作</strong>是指通过适度的拉伸和伸展肌肉，帮助身体提高柔韧性、放松肌肉和缓解紧张感的动作。常见的拉伸动作包括：</p>
<ol>
<li><strong>肩颈拉伸</strong>：通过头部轻轻向侧面弯曲，放松肩颈肌肉，缓解久坐带来的压力。</li>
<li><strong>腿部拉伸</strong>：伸展腿后肌群，帮助改善灵活性。</li>
<li><strong>猫式伸展</strong>：从瑜伽中常见的一种动作，有助于舒缓背部压力。</li>
</ol>
<p>适度的拉伸可以增强柔韧性，改善体态，缓解肌肉疲劳，适合日常运动前后使用。</p>
<p><img src="https://c5a6b8d.webp.li/2024/10/IMG_0449.JPG"><br><img src="https://c5a6b8d.webp.li/2024/10/IMG_0448.JPG"><br><img src="https://c5a6b8d.webp.li/2024/10/IMG_0447.JPG"><br><img src="https://c5a6b8d.webp.li/2024/10/IMG_0446.JPG"></p>
]]></content>
      <categories>
        <category>sports</category>
      </categories>
      <tags>
        <tag>yoga</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）</title>
    <url>/17582.html</url>
    <content><![CDATA[<h1 id="图床方案迭代"><a href="#图床方案迭代" class="headerlink" title="图床方案迭代"></a>图床方案迭代</h1><p>其实在博客搭建之初因为内容并不多，也比较少有插图，所以大部分的图片都是直接放在我的 Hugo 博客仓库的 static 目录下，也没觉得有什么不便，直到有一段时间需要多平台发布，复制了博客的 markdown 源文件后，因为所有图片都是博客的相对路径，导致图片全部无法显示，需要把图片一张张重新上传，十分繁琐。</p>
<p>那时才开始了解到图床（Image hosting）这个概念，把图片上传到一个专用的存储服务并通过公开链接使用，不但可以统一进行管理，还能有效减少博客仓库文件的体积，提高网站的加载速度。</p>
<h2 id="GitHub-jsDelivr-CDN-PicGo"><a href="#GitHub-jsDelivr-CDN-PicGo" class="headerlink" title="GitHub + jsDelivr CDN + PicGo"></a>GitHub + jsDelivr CDN + PicGo</h2><p>一开始我是新建了一个 GitHub 仓库，通过 PicGo 直接上传到仓库，并在 PicGo 返回时的图片路径改为 jsDelivr CDN 加速后的链接，其实倒也还算方便，还多了一份版本管理。</p>
<p>不过好景不长， jsDelivr 遭到了 DNS 污染，被大陆封锁，以至于我的博客图片在很长一段时间完全无法加载，也让我对这种纯依赖 CDN 的方式有了一些顾虑，再加上 GitHub 托管图片是基于代码仓库，上传图片依赖的是代码提交，容易污染 commit 记录，且终究算是一种滥用，万一账号&#x2F;仓库访问有问题也容易丢失所有图片，于是开始寻找其他方案。</p>
<h2 id="阿里云-OSS-PicGo"><a href="#阿里云-OSS-PicGo" class="headerlink" title="阿里云 OSS + PicGo"></a>阿里云 OSS + PicGo</h2><p>第二个想到的就是云服务商提供的对象存储了，像是 Amazon S3、阿里云 OSS 等都是云厂商提供的对象存储服务，在提供可访问的公开链接的基础上还多了权限控制、数据备份、拓展性等优势，在相对低成本的前提下提供了针对文件数据存储和管理的较优解决方案。</p>
<p>由于是想针对中国大陆用户进行访问优化，最终我选择了阿里云 OSS，配置不算复杂，同样是通过 PicGo 进行上传并转换为阿里云 OSS 的链接，在访问速度上有了明显的提升。</p>
<p>不过由于多是按量计费，持续增长的成本对于非盈利的个人博客来说也是需要考虑的。23 年初有一阵子博客流量较大，月账单持续上涨，再加上阿里云 OSS 如果需要自定义访问域名则需要进行备案，我域名本身通过 Cloudflare 进行托管，并不考虑备案，所以在用了几个月后，还是考虑更换图床方案。</p>
<h2 id="Chevereto-PicGo"><a href="#Chevereto-PicGo" class="headerlink" title="Chevereto + PicGo"></a>Chevereto + PicGo</h2><p>经过了一番调研，在我的服务器上使用 Docker 镜像部署了 Chevereto 的免费自部署版本，并将图片以 Docker Volume 的形式挂载在主机上。</p>
<p>Chevereto 的界面实话说风格有些老旧，还是古早的 php 服务，免费版也很久就不再维护升级，但胜在功能完备，同样可以使用 PicGo 对接 Chevereto 的 API 进行图片上传等操作，稳定性也不错，于是就这样用了一年半。</p>
<p>但自己对于自部署服务的稳定性和数据的珍贵性还是有些大意，前几天服务器突然挂了，内核报错直接无法重启，服务挂了倒还好说，但是我这一年半多的图片数据也无法导出。</p>
<p>翻遍了网上各种方案，折腾了一天终于算是解决了，但这一次的教训让我对有重要数据的服务备份和自部署稳定程度都有了全新的认识，再加上想要重新部署的时候发现免费版镜像等已经下线，只剩一个按年付费的 License 版本，于是放弃了原方案。</p>
<h2 id="Cloudflare-R2-WebP-Cloud-PicGo"><a href="#Cloudflare-R2-WebP-Cloud-PicGo" class="headerlink" title="Cloudflare R2 + WebP Cloud + PicGo"></a>Cloudflare R2 + WebP Cloud + PicGo</h2><p>于是重新转向了云服务厂商的对象存储，发现了赛博菩萨 Cloudflare 提供的 R2 对象存储这一服务，免费计划中有每月 10 GB 的存储容量，对于个人使用来说完全够用，大厂的服务与数据安全也有保障。</p>
<p>为了优化用户的访问，又使用了一个「WebP Cloud」服务对 R2 的图片进行代理，在代理层面进一步减小图片体积，虽然对于国内用户来说速度肯定还是比不上阿里云 OSS 这种线路，但是在不用备案、稳定且免费的综合条件下，这是我能想到的最好的方案了。</p>
<p>在电脑端同样是通过 PicGo 客户端几乎一键上传并生成博客直接可用的 markdown 图片链接，配置完成后使用起来很顺滑。</p>
<h1 id="图床搭建说明"><a href="#图床搭建说明" class="headerlink" title="图床搭建说明"></a>图床搭建说明</h1><p>Cloudflare R2 + WebP Cloud + PicGo 的方案尽管牵扯到了多个组件和平台，但所有操作都在 Free Plan 中，也是我最终选定的方案，下面将从零开始介绍如何搭建这个免费图床系统。</p>
<h2 id="Cloudflare-R2"><a href="#Cloudflare-R2" class="headerlink" title="Cloudflare R2"></a>Cloudflare R2</h2><p>R2 是 Cloudflare 推出的免费对象存储服务，需要免费注册一个 Cloudflare 账号才能使用，注册登录后，点击左侧边栏的 R2 访问服务，但需要注意的是开通 R2 服务需要绑定信用卡（国内外主流信用卡皆可），但并不会扣费，主要是为了验证用户身份使用。</p>
<h2 id="创建图床-Bucket"><a href="#创建图床-Bucket" class="headerlink" title="创建图床 Bucket"></a>创建图床 Bucket</h2><p><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-205700.png"></p>
<p>开通 R2 服务后，点击右上角「创建存储桶」按钮进行创建。</p>
<p><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-205854.png"></p>
<p>进入创建配置界面后，需要填写存储桶（Bucket）名称，建议有一些辨识度，后续在配置上传时会用到。</p>
<p>位置则选择「自动」，但可以额外多配置一个位置提示，由于我后续还将使用「WebP Cloud」服务的美西机房进行图片代理优化，所以在此处选择的是「北美洲西部（WNAM）」，根据需求选其他区域也可以，但 Cloudflare 并不保证一定会分配到所指定的区域。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210024.png"><br>点击「创建存储桶」按钮即完成创建，此时我们已经可以向我们的「yu-r2-test」存储桶上传文件了，可以选择在网页直接上传文件或文件夹。</p>
<p>也可以使用 S3 API 进行上传，我们后续使用 PicGo 客户端进行上传就依赖这种方式，但需要进行一些额外配置，点击导航栏「设置」选项进行配置。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210047.png"><br>首先我们需要打开「R2.dev 子域」，这是为了后续访问图片时需要的公网地址，点击「允许访问」，并按照提示输入「allow」即可开启。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210108.png"><br>完成后会显示一个以 r2.dev 结尾的公网网址，即我们后续访问图片的网址。</p>
<h2 id="自定义图床域名（可选）"><a href="#自定义图床域名（可选）" class="headerlink" title="自定义图床域名（可选）"></a>自定义图床域名（可选）</h2><p>但是分配的网址比较长，不易于记忆，我们可以通过「自定义域」来绑定我们的专属域名，点击「连接域」按钮。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210445.png"><br>输入自己想绑定的域名，如 yu-r2-test.pseudoyu.com，点击继续。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210508.png"><br>连接域，并等待 DNS 解析生效即可。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210523.png"><br>完成后 bucket 状态处「公共 URL 访问」显示“已允许”，且「域」显示为我们刚自定义的域名即配置成功。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-210544.png"></p>
<h2 id="配置-Bucket-访问-API"><a href="#配置-Bucket-访问-API" class="headerlink" title="配置 Bucket 访问 API"></a>配置 Bucket 访问 API</h2><p><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-212507.png"><br>当我们完成上述配置后，可以回到存储桶「对象」界面，上传一张示例图片，点开详情则会显示该图片的访问地址，此时我们就拥有了一个可访问的图床服务了。</p>
<p>但每次都要打开 Cloudflare 页面手动上传图片的方式显然不够便捷。R2 提供了 S3 兼容的 API，可以方便地使用一些客户端&#x2F;命令行工具进行上传、删除等操作。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-212525.png"><br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-212543.png"><br>回到 R2 主页面，点击右上角「管理 R2 API 令牌」，进入后点击「创建 API 令牌」。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-212559.png"><br>输入令牌名称，「权限」选择“对象读和写”并将此 API 指定之前所创建的 Bucket，这样最小化权限也保障数据安全，其余选项保持默认即可。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-212614.png"><br>完成创建后会显示所有密钥，我们使用 PicGo 需要的是下面三个信息，不过因为只会显示一次，建议在密码管理软件或其他地方妥善保管好这些参数信息。</p>
<p>至此，我们需要在 Cloudflare R2 上配置的部分就完成了，接下来我们需要配置 PicGo 客户端。</p>
<h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>PicGo 是一个用于快速上传并获取图片 URL 的工具软件，有着较为丰富的插件生态，支持多种图床服务，其 GitHub 仓库为「GitHub - Molunerfinn&#x2F;PicGo」，可以下载对应平台客户端使用。</p>
<h2 id="配置-R2-图床"><a href="#配置-R2-图床" class="headerlink" title="配置 R2 图床"></a>配置 R2 图床</h2><p>PicGo 本体并不包括 S3 图床，但可以通过「GitHub - wayjam&#x2F;picgo-plugin-s3」插件来支持。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-213010.png"><br>在「插件设置」中选择安装，「图床设置」中就新增了 Amazon S3 选项。点击进入配置选项。<br>这里有几项配置需要尤其注意。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-213025.png"></p>
<ul>
<li><strong>应用密钥 ID</strong>，填写 R2 API 中的 Access Key ID（访问密钥 ID）</li>
<li><strong>应用密钥</strong>，填写 R2 API 中的 Secret Access Key（机密访问密钥）</li>
<li>桶名，填写 R2 中创建的 Bucket 名称，如我上文的 yu-r2-test</li>
<li><strong>文件路径</strong>，上传到 R2 中的文件路径，我选择使用 {fileName}.{extName} 来保留原文件的文件名和扩展名。</li>
<li><strong>自定义节点</strong>，填写 R2 API 中的「为 S3 客户端使用管辖权地特定的终结点」，即 xxx.r2.cloudflarestorage.com 格式的 S3 Endpoint</li>
<li><strong>自定义域名</strong>，填写上文生成的 xxx.r2.dev 格式的域名或自定义域名，如我配置的 yu-r2-test.pseudoyu.com</li>
</ul>
<p>其他配置保持默认即可，确认参数无误后点击「确定」与「设置为默认图床」即可。</p>
<p><strong>图片上传</strong><br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-213048.png"><br>完成上述配置后，我们就可以在「上传区」直接拖入文件进行图片上传了，如上传后显示无误则为配置成功，生成的链接会自动在系统剪贴板中，直接在需要的地方粘贴即可。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-213100.png"><br>并且可以在链接格式处选择对应格式，如 URL 或是博客可用的 Markdown 格式链接等。这里我还做了一个小的配置，在左侧「PicGo 设置」 - 「自定义链接格式」中修改为 <img src="/$url" alt="$fileName">，并在上传区的链接格式处选择了「Custom」，这样我上传后就会根据文件名生成以文件名为 Alt 文本的 Markdown 图片链接。</p>
<h2 id="WebP-Cloud-图片优化"><a href="#WebP-Cloud-图片优化" class="headerlink" title="WebP Cloud 图片优化"></a>WebP Cloud 图片优化</h2><p>至此我们已经完成了整个图床的搭建、配置和上传，但通常我们本地截图或是相机拍摄的图片体积较大，对于访客来说加载时间会较长，并不直接适合互联网发布。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215114.png"><br>我在很长的一段时间都用了非常笨的方法，即「TinyPNG」这一在线网站的 api 配合一个开源的 macOS 客户端应用，将图片拖入其中进行压缩后再通过 PicGo 上传到图床，通常能够在图片质量损失较小的前提下减少图片 50% 以上的体积，繁琐却有效。</p>
<p>这次更换图床方案后也开始寻找更智能的图片优化服务，想到了「WebP Cloud」。</p>
<p>其实了解到这一服务是去年的一个晚上和 STRRL 正在杭州一个商城的电玩城里看人打音游，他给我看了 Nova Kwok 的一篇博客上了 hacker news 榜首的消息，一起围观了半天，不过当时大概只知道是优化图片的服务，并没有详细了解。<br>于是又去打开了官网「webp.se」看了一下更为详细的介绍。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215131.png"><br>简单来说这是一个类 CDN 的图片代理 SaaS 服务，可以在几乎不改变画质的情况下大幅缩小图片体积，加快整体站点加载速度。发展到现在除了图片体积减少外，还提供了缓存、添加水印、图片滤镜等更多实用的功能，并提供了自定义 Header 等配置选项。</p>
<p>看了一圈，觉得能很好满足我的博客图片优化需求，开始折腾配置。</p>
<p><strong>配置 WebP Cloud</strong><br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215212.png"><br>首先通过 GitHub 授权登录 WebP Cloud 平台。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215226.png"><br>页面非常直观，主要显示了当前 Plan 下的 Free Quota 和额外 Quota 的数据，以及一些用量统计。<br>点击「Create Proxy」按钮可以添加配置。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215246.png"></p>
<ul>
<li>为了优化国内访问，我「Proxy Region」选择的是美西「Hillsboro, OR」区域</li>
<li>「Proxy Name」填写一个自定义名称即可</li>
<li>「Proxy Origin URL」，比较重要，需要填写上文我们配置好的 R2 自定义域名，如我填写的是 yu-r2-test.pseudoyu.com，如果没配置自定义域名则填写 R2 提供的 xxx.r2.dev 格式的域名</li>
</ul>
<p><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215302.png"><br>图中 Basic info 部分「Visitor」下显示的以 xxx.webp.li 格式即为我们的代理地址。</p>
<p>例如我们之前通过 PicGo 上传到 R2 的文件 yu-r2-test.pseudoyu.com&#x2F;new_mbp_setup.jpg 则可以用 dc84642.webp.li&#x2F;new_mbp_setup.jpg 这一链接进行访问。</p>
<p>如果不喜欢默认的代理地址，则可以右下角 Chat 或是邮箱联系开发者进行自定义域名修改，之后或许也会有更自动化的配置流程。</p>
<p>下面可以通过滑动条来调整图片压缩比率，默认为 80%，5M 的 jpg 图片压缩后的 webp 大小通常小于 1M，基本满足了网络传播需求，其他配置保持默认即可，如有需要可以根据文档进行配置。</p>
<h2 id="更改-PicGo-配置"><a href="#更改-PicGo-配置" class="headerlink" title="更改 PicGo 配置"></a>更改 PicGo 配置</h2><p><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215324.png"><br>需要注意的是，由于我们最终需要放在博客中的图片是经过 WebP Cloud 代理过的链接，所以需要回到 PicGo 的「图床设置」中，将「自定义域名」改为我们刚配置的 WebP Cloud 代理地址，即格式为 xxx.webp.li 的代理链接或其他自定义域名。</p>
<h2 id="WebP-Cloud-用量"><a href="#WebP-Cloud-用量" class="headerlink" title="WebP Cloud 用量"></a>WebP Cloud 用量</h2><p>免费用户每天有 2000 Free Quota，即能够代理 2000 次图片访问请求，并提供 100M 的图片缓存，对于一般用户来说完全够用，如有一些流量较大的特定时期也可以购买额外 Quota，价格很便宜。<br>如超过了 Quota，访问则会被 301 转发到源站图片地址，不经 WebP Cloud 服务压缩，但依然可用；超过 100M 的缓存则会按照 LRU 算法清理，所以依然能够保障一些高频请求的图片能够有较好的访问体验。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215338.png"><br>我博客的日访问量大概在 300-500 visits 左右，再加上一些 RSS 订阅和爬虫的流量，根据 WebP Cloud 统计测算来看，平日的请求大概在 4000-5000 次，发博文当天会有 10000+。<br><img src="https://c5a6b8d.webp.li/2024/09/2024-09-09-215355.png"><br>所以目前先选择了 Lite 计划，配合一些额外用量来 Cover 高峰流量，打算再观察一阵子看看。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是我的图床系统搭建方案，本文的所有图片也都使用 PicGo 上传、Cloudflare R2 存储并经 WebP Cloud 代理优化。<br>这是我的博客搭建部署系列教程之一，如对评论系统、数据统计系统等搭建感兴趣，请持续关注，希望能对大家有所参考。</p>
<blockquote><p>从零开始搭建你的免费图床系统 </p>
<footer><strong>少数派</strong><cite><a href="https://sspai.com/post/90170">从零开始搭建你的免费图床系统</a></cite></footer></blockquote>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Cloudflare</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
</search>
